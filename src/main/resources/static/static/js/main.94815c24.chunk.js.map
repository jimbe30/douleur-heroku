{"version":3,"sources":["globals/redux/FormActions.js","ordonnance/services/OrdonnanceActions.js","globals/util-components/TruncBox.js","globals/hoc/ActiveItemHandler.js","ordonnance/ArborescenceComponent.js","globals/util-components/ComponentLoader.js","ordonnance/ArborescenceController.js","ordonnance/FicheDouleurComponent.js","ordonnance/FicheDouleurController.js","globals/redux/reduxFormAdapter.js","ordonnance/PrescriptionObj.js","globals/util-components/Boutons.js","ordonnance/PrescriptionLibreForm.js","ordonnance/PrescriptionLibreController.js","ordonnance/PrescriptionForm.js","globals/hoc/FormHandler.js","ordonnance/PrescriptionController.js","globals/util-components/FormInput.js","ordonnance/OrdonnanceForm.js","ordonnance/OrdonnanceController.js","ordonnance/OrdonnanceConfirm.js","globals/util-components/Helper.js","nomenclature/ProduitForm.js","nomenclature/services/GestionNomenclatureService.js","nomenclature/MedicamentForm.js","nomenclature/services/GestionNomenclatureActions.js","nomenclature/OrdonnanceTypeForm.js","nomenclature/GestionNomenclatureController.js","nomenclature/ListeOrdonnancesTypes.js","nomenclature/OrdonnancesTypesController.js","auth/LoginComponent.js","auth/LoginController.js","auth/UserInfos.js","globals/services/routeService.js","auth/services/AuthService.js","globals/redux/store.js","globals/services/apiService.js","Test.js","globals/redux/reducers.js","globals/components/MenuBar.js","globals/components/Accueil.jsx","globals/components/ReduxHistory.js","index.jsx","App.jsx"],"names":["formNames","TEST_FORM","PRESCRIPTION_FORM","INFOS_PATIENT_FORM","CONFIG_ORDONNANCE_FORM","setFormValues","formName","formValues","dispatchData","resetFormErrors","stateForm","Object","assign","getState","newState","fields","keys","Array","isArray","filter","field","startsWith","forEach","objectSpread","defineProperty","setFormErrors","errors","includes","replace","dataTypes","INFOS_TEST","ARBORESCENCE","PRESCRIPTIONS","PRESCRIPTION_CHOISIE","PRESCRIPTION_SAISIE","ORDONNANCE_EMISE","_callee2","result","regenerator_default","a","wrap","_context2","prev","next","getResultFromUrl","urls","arborescenceDouleurs","sent","data","stop","_callee3","idDouleur","_context3","ficheDouleur","_callee4","ordonnance","history","obj","idOrdonnance","_context4","postObjectToUrl","nouvelleOrdonnance","console","log","JSON","stringify","goToRoute","routesConfig","FORMULAIRE_ORDONNANCE","getOrdonnanceEmise","fileURL","CONFIRMATION_ORDONNANCE","t0","error","_x5","_getOrdonnanceEmise","apply","this","arguments","_callee5","pdfOrdonnance","_context5","ordonnanceEmise","responseType","Blob","type","URL","createObjectURL","window","navigator","msSaveOrOpenBlob","open","backendURL","abrupt","TruncBox","props","className","children","width","height","moreText","lessText","rest","objectWithoutProperties","style","react_default","createElement","concat","truncated","onClick","e","target","previousSibling","Fragment","ActiveItemHandler","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","index","currentActive","state","activeIndex","setState","bind","assertThisInitialized","_this2","_this$props","render","componentList","otherProps","map","component","isActive","React","Component","Arborescence","_ref","nomenclatures","ActiveItemHandler_ActiveItemHandler","_ref2","Branche","key","libelle","nomenclaturesEnfants","_ref3","accordion","title","content","_ref4","length","Feuille","infosGenerales","id","_ref5","handleClickDouleur","buttonStyle","float","maxWidth","marginTop","marginBottom","marginRight","Button","primary","size","util_components_TruncBox","_ref6","Accordion","styled","Title","active","Icon","name","Content","ComponentLoader","IN_PROGRESS","FINISHED","progression","errorMessage","errorList","Message","message","timeout","setTimeout","clearTimeout","loadedObject","loader","Loader","top","FICHE_DOULEUR","_setArborescence","setArborescence","ComponentLoader_ComponentLoader","info","ArborescenceComponent_Arborescence","connect","appState","FicheDouleurComponent","prescriptions","prescriptionChoisie","clickOrdonnance","douleur","nomenclatureDouleur","infos","recommandations","nbPreco","messageInfo","warning","messageRecommandation","Header","as","renderPrescription","prescription","formatTexte","description","split","ligne","medicamentsPreconises","undefined","Grid_Grid","container","justify","direction","alignItems","spacing","item","preconisation","react","Divider","FicheDouleur","clickPrescription","store","precedente","setPrescriptionChoisie","FORMULAIRE_PRESCRIPTION","_x2","_setPreconisations","setPreconisations","getRouteParams","renderRadio","Form","Radio","checked","input","value","radioValue","label","onChange","FormSelect","fieldProps","handleChange","event","Select","renderTextArea","TextArea","placeholder","Prescription","ordonnancePreconisee","nbMedicaments","getProduits","numMedicament","compatibilites","compatibilite","produit","getDesignationsProduits","produits","designation","BoutonAjouter","others","Boutons_Bouton","icon","color","BoutonSupprimer","BoutonValider","BoutonAnnuler","Bouton","long","Popup","trigger","Label","blue","link","marginLeft","compact","labelPosition","teal","PrescriptionLibreForm","numMedicaments","handleClickAjouter","handleClickSupprimer","PrescriptionLibreForm_LigneDispensation","paddingTop","Boutons_BoutonAjouter","LigneDispensation","xs","Field","Input","formAdapter","options","text","Boutons_BoutonSupprimer","PrescriptionLibreController","ajouterMedicament","supprimerMedicament","prochainNumMedicament","debutCompteur","toConsumableArray","preventDefault","indexOf","splice","PrescriptionForm","onSubmit","prescriptionSaisie","medicament","formulaireMedicament","ordonnance_PrescriptionLibreController","medicaments","horizontal","fitted","recapPrescription","Group","inline","reset","libellesMedicaments","join","padding","numProduit","required","dosagesProduits","dosage","autresChamps","prescpription","_loop","champ","FormHandler","WrappedComponent","handleForm","_React$Component","inherits","createClass","prevProps","savedValues","currentValues","appForms","form","values","initialValues","reduxForm","FORM_NAME","PrescriptionControler","submitPrescription","FormHandler_FormHandler","recapitulerPrescription","recapDosage","quantite","forme","frequence","duree","FormInput","inputRef","createRef","openPopup","closePopup","clickInput","checkError","indexDisplayError","onMouseOver","onMouseOut","mouseLeaveDelay","hoverable","on","ref","OrdonnanceForm","FormInput_FormInput","OrdonnanceController","submitOrdonnance","infosPatient","_x3","_x4","_setOrdonnanceEmise","setOrdonnanceEmise","libelleDouleur","OrdonnanceForm_OrdonnanceForm","margin","recapitulerInfosPatient","href","rel","Helper","helpText","verticalAlign","ProduitForm","majProduit","_useContext","useContext","NomenclatureContext","listeProduits","listeUnitesDosage","produitsProposes","itemProduit","unitesDosage","unite","uniteDosage","listeDosages","handleChangeData","attribut","find","produitPropose","handleChangeDosage","nouvelleListeDosages","focus","dosageError","useEffect","document","querySelector","Grid","padded","Row","Column","reduxFormAdapter_FormSelect","idProduit","FormGroup","widths","unstackable","verifierOrdonnanceType","ordonnanceType","valide","isOK","verifierMedicament","formes","isNaN","errorKey","verifierProduit","descriptionOrdonnanceType","descriptionProduit","descriptionMedicament","Medicament","majMedicament","formesProposees","formesMedicamenteuses","isMedicamentOK","ajouterProduit","nouveauxProduits","titre","paddingLeft","FormField","control","defaultValue","disabled","nouvellesFormes","supprimerForme","Table","TableBody","TableRow","TableCell","supprimerProduit","namespace","ORDONNANCE_TYPE","LISTE_ORDONNANCES_TYPES","PROTOCOLE_DOULEUR","NOMENCLATURE_DOULEUR","_callee","_context","ORDONNANCES_TYPES","ajouterOrdonnanceType","listeOrdonnances","dataType","push","OrdonnanceType","mode","_useState","useState","_useState2","slicedToArray","setOrdonnanceType","wOrdonnance","isOrdonnanceValide","valider","_x","_validerOrdonnanceType","validerOrdonnanceType","textAlign","basic","Boutons_BoutonValider","Boutons_BoutonAnnuler","createContext","ListeOrdonnancesTypes","ordonnancesTypes","creerOrdonnance","listeOrdonnancesTypes","GridRow","GridColumn","nomenclature","GESTION_NOMENCLATURE","LoginComponent","_props","listeIdProviders","identifiants","dividing","List","divided","relaxed","Item","react_router_dom","to","idp","getRoutePath","LOGIN_IDP","idProvider","Image","src","spaced","Description","auth","ERROR_MESSAGE","IDP_LIST","backendLogin","loadIdProvidersList","auth_LoginComponent","userInfos","USER_INFOS","router","fullName","preferredUsername","email","position","right","zIndex","fontSize","Dropdown","Menu","roles","logout","idToken","getTokenFromUrl","validateToken","LOGIN_FORM","basePath","TEST","path","getPath","Test","Ordonnance","OrdonnanceConfirm","OrdonnancesTypes","LoginController","VALIDATE_TOKEN","UserInfos","route","pathParams","generatePath","match","params","ID_TOKEN","ID_PROVIDER","asyncToGenerator","mark","idpList","apiURLs","idProvidersList","redirectUrl","location","origin","loginUrl","login","URLSearchParams","search","get","userResult","id_token","user","idpRegistration","registrationId","textMimeTypes","returnTypes","messagesFromStatus","401","403","url","config","secureUrlConfig","axios","then","response","getResultFromResponse","getResultFromError","handleError","object","post","getIdToken","headers","Authorization","authDataTypes","status","contentType","textResult","toLowerCase","parse","_x6","REDIRECT_TEST","serverRedirect","test","redirectInfo","namespaces","testDataTypes","nomenclatureDataTypes","ordonnanceDataTypes","reducers","combineReducers","action","namespaceData","findIndex","getReducer","getReducers","formReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","dispatch","MenuBar","setOpen","BurgerMenu","isOpen","onStateChange","HISTORIQUE","LIENS","Accueil","ReduxHistory","useHistory","childrenProps","ReactDOM","contentHeight","Math","floor","screen","availHeight","es","MenuBar_MenuBar","inverted","paddingBottom","left","background","minWidth","auth_UserInfos","Segment","overflow","react_router","exact","components_Accueil","routeKey","getElementById"],"mappings":"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","file":"static/js/main.94815c24.chunk.js","sourcesContent":["import dispatchData, { getState } from \"./store\";\r\n\r\nexport const formNames = {\r\n\tTEST_FORM: 'TEST_FORM',\r\n\tPRESCRIPTION_FORM: 'PRESCRIPTION_FORM',\r\n\tINFOS_PATIENT_FORM: 'infosPatient',\r\n\tCONFIG_ORDONNANCE_FORM: 'configOrdonnance'\r\n}\r\n\r\n/**\r\n * action pour dispatcher les valeurs de formulaires\r\n */\r\nexport function setFormValues(formName, formValues) {\t\r\n\tdispatchData(formName, formValues);\r\n}\r\n\r\nexport function setFormValue(formName, fieldName, value) {\r\n\tconst formData = {...getFormValues(formName), [fieldName]: value}\r\n\tdispatchData(formName, formData)\r\n}\r\n\r\nexport function resetForm(formName) {\r\n\tdispatchData(formName, null);\r\n}\r\n\r\nexport function resetFormErrors(formName) {\r\n\tlet stateForm = Object.assign({}, getState('appForms')[formName])\r\n\tlet newState = {}\r\n\tconst fields = Object.keys(stateForm)\r\n\tif (Array.isArray(fields)) {\r\n\t\tfields.filter(field => !field.startsWith('error.')).forEach(\r\n\t\t\tfield => {\r\n\t\t\t\tnewState = { ...newState, [field]: stateForm[field] }\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tdispatchData(formName, newState);\r\n}\r\n\r\nexport function getFormValues(formName) {\r\n\tconst formState = Object.assign({}, getState('appForms')[formName])\r\n\treturn formState\r\n}\r\n\r\nexport function setFormErrors(formName, errors) {\r\n\tlet stateForm = Object.assign({}, getState('appForms')[formName])\r\n\tconst fields = Object.keys(errors)\r\n\tif (Array.isArray(fields)) {\r\n\t\tfields.filter(\r\n\t\t\tfield => field.startsWith(formName + \".\") || !field.includes('.')\r\n\t\t).forEach(\r\n\t\t\tfield => {\r\n\t\t\t\tstateForm = { ...stateForm, ['error.' + field.replace(formName + '.', '')]: errors[field] }\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tdispatchData(formName, stateForm);\r\n}\r\n","import dispatchData, { store } from \"../../globals/redux/store\";\r\nimport { apiURLs as urls, getResultFromUrl, postObjectToUrl, backendURL } from \"../../globals/services/apiService\";\r\nimport { setFormValues, formNames, setFormErrors, resetFormErrors } from \"../../globals/redux/FormActions\";\r\nimport { goToRoute, routesConfig } from \"../../globals/services/routeService\";\r\n\r\nexport const dataTypes = {\r\n\tINFOS_TEST: 'INFOS_TEST',\r\n\tARBORESCENCE: 'ARBORESCENCE',\r\n\tPRESCRIPTIONS: 'PRESCRIPTIONS',\r\n\tPRESCRIPTION_CHOISIE: 'PRESCRIPTION_CHOISIE',\r\n\tPRESCRIPTION_SAISIE: 'PRESCRIPTION_SAISIE',\r\n\tORDONNANCE_EMISE: 'ORDONNANCE_EMISE'\r\n}\r\n\r\nexport async function setInfosTest(infos) {\r\n\tdispatchData(dataTypes.INFOS_TEST, infos);\r\n}\r\n\r\nexport async function setArborescence() {\r\n\tconst result = await getResultFromUrl(urls.arborescenceDouleurs)\r\n\tdispatchData(dataTypes.ARBORESCENCE, result.data);\r\n}\r\n\r\nexport async function setPreconisations(idDouleur) {\r\n\tconst result = await getResultFromUrl(urls.ficheDouleur(idDouleur))\r\n\tdispatchData(dataTypes.PRESCRIPTIONS, result.data);\r\n}\r\n\r\nexport function setPrescriptionChoisie(prescription) {\r\n\tlet state = store.getState().ordonnance\r\n\tlet precedente = state && state[dataTypes.PRESCRIPTION_CHOISIE] ? state[dataTypes.PRESCRIPTION_CHOISIE] : {}\r\n\tif (JSON.stringify(precedente) !== JSON.stringify(prescription)) {\r\n\t\tsetFormValues(formNames.PRESCRIPTION_FORM, null)\r\n\t}\r\n\tdispatchData(dataTypes.PRESCRIPTION_CHOISIE, prescription);\r\n}\r\n\r\nexport function setPrescriptionSaisie(prescription) {\r\n\tdispatchData(dataTypes.PRESCRIPTION_SAISIE, prescription);\r\n}\r\n\r\nexport async function setOrdonnanceEmise(ordonnance, history) {\r\n\r\n\tresetFormErrors(formNames.INFOS_PATIENT_FORM)\r\n\tlet result = await postObjectToUrl(ordonnance, urls.nouvelleOrdonnance)\r\n\tif (result.data) {\r\n\t\tconst obj = result.data\r\n\t\tif (obj.errors) {\r\n\t\t\tconsole.log(JSON.stringify(obj))\r\n\t\t\tsetFormErrors(formNames.INFOS_PATIENT_FORM, obj.errors)\r\n\t\t\tgoToRoute(history)(routesConfig.FORMULAIRE_ORDONNANCE)\r\n\t\t} else {\r\n\t\t\tconst idOrdonnance = result.data\r\n\t\t\ttry {\r\n\t\t\t\tordonnance.fileURL = await getOrdonnanceEmise(idOrdonnance)\r\n\t\t\t\tgoToRoute(history)(routesConfig.CONFIRMATION_ORDONNANCE)\r\n\t\t\t\tconsole.log('L\\'ordonnance a bien été enregistrée')\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tconsole.error('L\\'ordonnance n\\'a pas pu être correctement enregistrée')\r\n\t}\r\n\tdispatchData(dataTypes.ORDONNANCE_EMISE, ordonnance)\r\n}\r\n\r\nexport async function getOrdonnanceEmise(idOrdonnance) {\r\n\tlet fileURL\r\n\ttry {\r\n\t\tlet pdfOrdonnance = await getResultFromUrl(urls.ordonnanceEmise(idOrdonnance), { responseType: 'blob' })\r\n\t\tpdfOrdonnance = new Blob([pdfOrdonnance.data], { type: 'application/pdf' })\r\n\t\tfileURL = URL.createObjectURL(pdfOrdonnance)\r\n\t\tif (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n\t\t\twindow.navigator.msSaveOrOpenBlob(pdfOrdonnance, idOrdonnance);\t\t\t\r\n\t\t} else {\r\n\t\t\twindow.open(fileURL)\r\n\t\t}\r\n\t\tfileURL = (backendURL ? backendURL : '') + urls.ordonnanceEmise(idOrdonnance)\r\n\t} catch (error) {\r\n\t\tconsole.error(error)\r\n\t\tthrow error\r\n\t}\r\n\treturn fileURL\r\n}\r\n","import React from 'react'\r\n\r\nfunction TruncBox(props) {\r\n\r\n    const {className, children, width, height, moreText, lessText, ...rest} = props\r\n\r\n    const style = \r\n        <style> {`\r\n            .truncated {\r\n                max-height: ${height ? height + ';':'2rem;'}\r\n                max-width: ${width ? width + ';':'100%;'}\r\n                width: ${width ? width + ';':'100%;'}\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n            } \r\n            .expand, .trunc {\r\n                width: fit-content;\r\n                margin-left: auto;\r\n                margin-right: auto;\r\n            }\r\n            .expand::after, .trunc::after {\r\n                cursor: pointer;\r\n                color: #718293;\r\n                font-style: italic;\r\n            }\r\n            .expand::after {\r\n                content: '${moreText ? moreText : '\\\\0025BC'}'; \r\n                font-size: ${!moreText ? '1rem' : '.5rem'};\r\n            }         \r\n            .trunc::after {\r\n                content: '${lessText ? lessText : '\\\\0025B2'}';\r\n                font-size: ${!lessText ? '1rem' : '.5rem'};\r\n            }\r\n        `}\r\n        </style>\r\n\r\n    let truncated = true\r\n\r\n    const onClick = e => {\r\n        if (truncated) {\r\n            e.target.className = 'trunc'\r\n            e.target.previousSibling.className = className ? className: ''\r\n            truncated = false\r\n        } else {\r\n            e.target.className = 'expand'\r\n            e.target.previousSibling.className = `${className ? className + ' ' : ''}truncated`\r\n            truncated = true\r\n        }\r\n    }\r\n\r\n    const render = function () {\r\n        return (\r\n            <React.Fragment>\r\n                {style}\r\n                <div className={`${className ? className + ' ' : ''}truncated`} {...rest}>\r\n                    {children}                    \r\n                </div>\r\n                <div onClick={onClick} className='expand'></div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return render()\r\n}\r\n\r\nexport default TruncBox","import React from 'react'\r\n\r\nexport default class ActiveItemHandler extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.handleClick = this.handleClick.bind(this)\r\n\t\tthis.state = {\r\n\t\t\tactiveIndex: -1\r\n\t\t}\r\n\t}\r\n\r\n\thandleClick = (index) => {\r\n\t\tlet currentActive = this.state.activeIndex\r\n\t\tif (currentActive === index) {\r\n\t\t\tcurrentActive = -1\r\n\t\t} else {\r\n\t\t\tcurrentActive = index\r\n\t\t}\r\n\t\tthis.setState({ activeIndex: currentActive })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { render, componentList, ...otherProps } = this.props\r\n\t\tif (Array.isArray(componentList)) {\r\n\t\t\treturn componentList.map((component, index) => {\r\n\t\t\t\tconst isActive = index === this.state.activeIndex\r\n\t\t\t\treturn render({ component, index, isActive, handleClick: this.handleClick, otherProps })\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tconst isActive = 0 === this.state.activeIndex\r\n\t\t\treturn render({ component: componentList, index: 0, isActive, handleClick: this.handleClick, otherProps })\r\n\t\t}\r\n\t}\r\n}","import React from 'react'\r\nimport { Accordion, Button, Icon } from 'semantic-ui-react'\r\nimport \"./Arborescence.css\";\r\nimport TruncBox from '../globals/util-components/TruncBox';\r\nimport ActiveItemHandler from '../globals/hoc/ActiveItemHandler';\r\n\r\n\r\nexport default function Arborescence({ nomenclatures, ...otherProps }) {\r\n\tfunction renderBranche({ component, index, isActive, handleClick, otherProps }) {\r\n\t\treturn (\r\n\t\t\t<Branche key={index} onClick={() => handleClick(index)} isActive={isActive}\r\n\t\t\t\tlibelle={component.libelle}\tnomenclaturesEnfants={component.nomenclaturesEnfants}\t{...otherProps} />\r\n\t\t)\r\n\t}\r\n\treturn <ActiveItemHandler render={renderBranche} componentList={nomenclatures} {...otherProps} />\r\n}\r\n\r\nfunction Branche({ libelle, nomenclaturesEnfants, isActive, onClick, ...otherProps })  {\r\n\t// Fonction de rendu de chaque nomenclature enfant :\r\n\tfunction renderNomenclatureEnfant({ component, index, isActive, handleClick, otherProps }) {\r\n\t\tif (component.nomenclaturesEnfants && component.nomenclaturesEnfants.length > 0) {\r\n\t\t\t// l'enfant a des enfants : on construit la branche de niveau inférieur\r\n\t\t\treturn (\r\n\t\t\t\t<Branche key={index} onClick={() => handleClick(index)} isActive={isActive}\r\n\t\t\t\t\tlibelle={component.libelle} nomenclaturesEnfants={component.nomenclaturesEnfants} {...otherProps} />\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\t// l'enfant n'a pas d'enfant: on construit la feuille correspondante\r\n\t\t\treturn (\r\n\t\t\t\t<Feuille key={index} onClick={() => handleClick(index)} isActive={isActive}\r\n\t\t\t\t\tlibelle={component.libelle} infosGenerales={component.infosGenerales} idDouleur={component.id} {...otherProps} />\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\tconst content = <ActiveItemHandler render={renderNomenclatureEnfant} componentList={nomenclaturesEnfants} {...otherProps} />\r\n\treturn accordion({ title: libelle, content, isActive, onClick })\r\n}\r\n\r\n\r\nfunction Feuille ({ libelle, infosGenerales, idDouleur, handleClickDouleur, onClick, isActive }) {\r\n\tconst buttonStyle = { float: 'right', maxWidth: '100%', marginTop: '-30px', marginBottom: '3px', marginRight: '2%' }\r\n\tfunction buildContent(data) {\r\n\t\tif (data) {\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Button primary size='tiny' style={buttonStyle} onClick={() => handleClickDouleur(idDouleur)}>\r\n\t\t\t\t\t\tFaire l'ordonnance\r\n          </Button>\r\n\t\t\t\t\t<TruncBox height='6rem' moreText='▼ ( voir plus ... )' lessText='▲ ( réduire ... )'>\r\n\t\t\t\t\t\t<pre className='infosBase'>{data}</pre>\r\n\t\t\t\t\t</TruncBox>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\tconst content = buildContent(infosGenerales)\r\n\treturn accordion({ title: libelle, content, isActive, onClick })\r\n}\r\n\r\nfunction accordion({ title, content, isActive, onClick }) {\r\n\treturn (\r\n\t\t<Accordion styled className={!isActive ? 'noborder' : ''}>\r\n\t\t\t<Accordion.Title active={isActive} index={0} onClick={onClick} >\r\n\t\t\t\t<Icon name='dropdown' />\r\n\t\t\t\t{title}\r\n\t\t\t</Accordion.Title>\r\n\t\t\t<Accordion.Content active={isActive}>{content}</Accordion.Content>\r\n\t\t</Accordion>\r\n\t)\r\n}","import React from 'react'\r\nimport { Loader, Message } from 'semantic-ui-react'\r\n\r\n\r\nexport default class ComponentLoader extends React.Component {\r\n\r\n\tIN_PROGRESS=0\r\n\tFINISHED=1  \r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tprogression: this.IN_PROGRESS\r\n\t\t}\r\n\t}\r\n\t\r\n\terror(errorMessage, props) {\r\n\t\treturn this.errors([errorMessage])\r\n\t}\r\n\r\n\terrors(errorList, props) {\r\n\t\tif (Array.isArray(errorList)) {\r\n\t\t\treturn <Message error {...props}>{\r\n\t\t\t\terrorList.map(\r\n\t\t\t\t\t(error, index) => {\r\n\t\t\t\t\t\tlet key = index, message = error\r\n\t\t\t\t\t\tif (error.key) {\r\n\t\t\t\t\t\t\tkey = error.key\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (error.message) {\r\n\t\t\t\t\t\t\tmessage = (error.key ? error.key + ': ' : index + '. ') + error.message\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn <div key={key}>{message}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t)}\r\n\t\t\t</Message>\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.timeout = setTimeout(() => {\r\n\t\t\t\tthis.setState({ progression: this.FINISHED})\r\n\t\t\t}, this.props.timeout ? this.props.timeout: 30000);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearTimeout(this.timeout)\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { loadedObject, render, children, timeout, ...rest } = this.props\r\n\t\tconst loader = <Loader active style={{ top: '30%' }}>Chargement en cours ... veuillez patienter</Loader>\r\n\r\n\t\tif (!loadedObject && this.state.progression === this.IN_PROGRESS) {\t\t\t\r\n\t\t\treturn loader\r\n\t\t} else if (loadedObject && loadedObject.error) {\r\n\t\t\treturn this.error(loadedObject.error, rest)\r\n\t\t} else if (loadedObject && loadedObject.errors) {\r\n\t\t\treturn this.errors(loadedObject.errors, rest)\r\n\t\t} else if (loadedObject && render) {\r\n\t\t\treturn render\r\n\t\t} else if (loadedObject && children) {\r\n\t\t\treturn children\r\n\t\t} else {\r\n\t\t\treturn <Message error>Aucun résultat n'a été trouvé pour votre requête</Message>\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","/**\r\n * Ici on prends en compte l'état applicatif (store redux).\r\n * La méthode connect() relie le store au composant cible \r\n */\r\nimport { connect } from 'react-redux'\r\nimport { setArborescence, dataTypes } from \"./services/OrdonnanceActions\";\r\nimport ArborescenceComponent from \"./ArborescenceComponent\";\r\nimport React, { Component } from 'react'\r\nimport { Message } from 'semantic-ui-react';\r\nimport { routesConfig, goToRoute } from '../globals/services/routeService';\r\nimport ComponentLoader from '../globals/util-components/ComponentLoader';\r\n\r\n/**\r\n * La fonction mapStateToProps renvoie un objet résultant du state. \r\n * L'objet renvoyé est passé en props du composant connecté\r\n */\r\nconst mapStateToProps = appState => ({\r\n    nomenclatures: appState.ordonnance[dataTypes.ARBORESCENCE]\r\n})\r\n\r\nclass Arborescence extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClickDouleur.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        setArborescence()\r\n    }\r\n\r\n    handleClickDouleur = (idDouleur) => {\r\n        goToRoute(this.props)(routesConfig.FICHE_DOULEUR, {idDouleur})\r\n    }\r\n\r\n    render() {\r\n        return <ComponentLoader loadedObject={this.props.nomenclatures}>\r\n            <div>\r\n                <Message info>Choisissez le type de douleur concernée dans l'arborescence ci-dessous</Message>\r\n                <ArborescenceComponent {...this.props} handleClickDouleur={this.handleClickDouleur}/>\r\n            </div>\r\n        </ComponentLoader>        \r\n    }\r\n}\r\n/**\r\n * La méthode connect() relie le store au composant cible.\r\n * Elle prend en paramètre la fonction \"mapStateToProps\" à laquelle le state \r\n * du store est passé en paramètre.\r\n */\r\nexport default connect(mapStateToProps)(Arborescence)","import React, { Fragment } from 'react'\r\nimport { Message, Divider, Header, Button} from 'semantic-ui-react'\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n/**\r\n * Si une prescription a été choisie on n'affiche que celle ci avec un message approprié\r\n * Sinon on affiche la liste des prescriptions proposées avec possibilité d'en choisir une par clic\r\n */\r\nexport default function FicheDouleurComponent(props) {\r\n\r\n  const { prescriptions, prescriptionChoisie, clickOrdonnance } = props\r\n\r\n  let douleur = () => {\r\n    let nomenclatureDouleur = null\r\n    if (prescriptionChoisie) {\r\n      nomenclatureDouleur = prescriptionChoisie.nomenclatureDouleur\r\n    } else if (prescriptions && prescriptions.length > 0) {\r\n      nomenclatureDouleur = prescriptions[0].nomenclatureDouleur\r\n    }\r\n    if (nomenclatureDouleur) {\r\n      return {\r\n        libelle: nomenclatureDouleur.libelle,\r\n        infos: nomenclatureDouleur.infosGenerales,\r\n        recommandations: nomenclatureDouleur.recommandations,\r\n      }\r\n    }\r\n    return {}\r\n  }\r\n  douleur = douleur()\r\n\r\n  let nbPreco = prescriptions && prescriptions.length > 0 ? prescriptions.length : 0\r\n\r\n  let messageInfo = () => {\r\n    if (prescriptionChoisie) {\r\n      return (\r\n        <Message info>Vous avez choisi l'ordonnance suivante</Message>\r\n      )\r\n    }\r\n    return (\r\n      nbPreco === 0 ?\r\n        <Message warning>Aucune ordonnance n'est encore proposée pour cette douleur</Message> :\r\n        <Message info>\r\n          {` ${nbPreco} ordonnance${nbPreco > 1 ? 's vous sont proposées' : ' vous est proposée'} `}\r\n          <br />Cliquez sur le bouton correspondant à l'ordonnance de votre choix\r\n        </Message>\r\n    )\r\n  }\r\n  messageInfo = messageInfo()\r\n\r\n  let messageRecommandation = (\r\n\t !prescriptionChoisie && douleur.recommandations && douleur.recommandations.length > 0 ?\r\n\r\n      <Message warning className='infosBase'>\r\n        <Header as='h4'>Remarques</Header>\r\n        {douleur.recommandations}\r\n\t\t</Message> \r\n\r\n\t\t: ''\r\n  )\r\n\r\n  const renderListePrescriptions = () => {\r\n    if (prescriptionChoisie) {\r\n      return (\r\n        <Fragment>\r\n          {renderPrescription(prescriptionChoisie)}\r\n          <Divider />\r\n        </Fragment>\r\n      )\r\n    } else if (nbPreco > 0) {\r\n      return prescriptions.map(\r\n        (prescription, index) => (\r\n          <Fragment key={index}>\r\n            {renderPrescription(prescription, index)}\r\n            <Divider />\r\n          </Fragment>\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderPrescription = (prescription, index) => {\r\n    const formatTexte = description => {\r\n      let lignes = description.split(' ; ')\r\n      return lignes.map(\r\n        ligne => (ligne + '\\r\\n')\r\n      )\r\n    }\r\n    if (prescription.medicamentsPreconises.length > 0) {\r\n      if (index !== undefined) {\r\n        // const gridStyle = {width: 'auto', padding: '0.2rem 0.5rem'}\r\n        return (\r\n          <div className='infosBase'>\r\n            <Grid container justify='flex-start' direction='row' alignItems='center' spacing={2} >\r\n              <Grid item>\r\n                <Button size='tiny' primary onClick={() => clickOrdonnance(index)}>\r\n                  Ordonnance {index + 1}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>   {\r\n                prescription.medicamentsPreconises.map(\r\n                  (preconisation, index) => <p key={index}>{formatTexte(preconisation.description)}</p>)}\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className='infosBase'>   {\r\n            prescription.medicamentsPreconises.map(\r\n              (preconisation, index) => <p key={index}>{formatTexte(preconisation.description)}</p>)}\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{douleur.libelle}</h3>\r\n      {messageInfo}\r\n      {renderListePrescriptions()}\r\n      {messageRecommandation}\r\n    </div>  )\r\n\r\n}","import { connect } from 'react-redux'\r\nimport React, { Component } from 'react'\r\n\r\nimport { setPreconisations, setPrescriptionChoisie, dataTypes } from \"./services/OrdonnanceActions\";\r\nimport FicheDouleurComponent from \"./FicheDouleurComponent\";\r\nimport { goToRoute, routesConfig, getRouteParams } from '../globals/services/routeService';\r\nimport ComponentLoader from '../globals/util-components/ComponentLoader';\r\n\r\nconst mapStateToProps = appState => ({\r\n    prescriptions: appState.ordonnance[dataTypes.PRESCRIPTIONS],\r\n})\r\n\r\nclass FicheDouleur extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.clickPrescription.bind(this)\r\n    }    \r\n\r\n    componentDidMount() {\r\n        let { idDouleur } = getRouteParams(this.props)\r\n        setPreconisations(idDouleur)\r\n    }\r\n\r\n    clickPrescription = (index) => {\r\n        setPrescriptionChoisie(this.props.prescriptions[index])\r\n        goToRoute(this.props)(routesConfig.FORMULAIRE_PRESCRIPTION)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ComponentLoader loadedObject={this.props.prescriptions}>\r\n                <FicheDouleurComponent clickOrdonnance={this.clickPrescription} prescriptions={this.props.prescriptions} />               \r\n            </ComponentLoader>\r\n        )\r\n    }\r\n}\r\n/**\r\n * La méthode connect() relie le store au composant cible.\r\n * Elle prend en paramètre la fonction \"mapStateToProps\", laquelle prend elle-même en paramètre le state du store.\r\n */\r\nexport default connect(mapStateToProps)(FicheDouleur)\r\n","import React from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { Field } from \"redux-form\";\r\n\r\nexport const renderCheckbox = field => (\r\n\t<Form.Checkbox\r\n\t\tchecked={!!field.input.value}\r\n\t\tname={field.input.name}\r\n\t\tlabel={field.label}\r\n\t\tonChange={(e, { checked }) => field.input.onChange(checked)}\r\n\t/>\r\n);\r\n\r\nexport const renderRadio = field => (\r\n\t<Form.Radio\r\n\t\tchecked={field.input.value === field.radioValue}\r\n\t\tlabel={field.label}\r\n\t\tname={field.input.name}\r\n\t\tonChange={(e, { checked }) => field.input.onChange(field.radioValue)}\r\n\t/>\r\n);\r\n\r\nexport const FormSelect = fieldProps => {\r\n\r\n\tlet input = fieldProps && fieldProps.input ? fieldProps.input : {}\r\n\tlet handleChange = input.onChange ? {onChange: (event, data) => input.onChange(data.value)} : {}\r\n\treturn (\r\n\t\t<Form.Select\r\n\t\t\t{...fieldProps}\r\n\t\t\t{...input}\r\n\t\t\t{...handleChange}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport function ReduxSelect({ label, name, placeholder, options, defaultValue, ...otherProps }) {\r\n\treturn (\r\n\t\t<Field component={FormSelect} label={label} name={name} placeholder={placeholder}\r\n\t\t\toptions={options} defaultValue={defaultValue} {...otherProps}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport const renderTextArea = field => (\r\n\t<Form.TextArea\r\n\t\t{...field.input}\r\n\t\tlabel={field.label}\r\n\t\tplaceholder={field.placeholder}\r\n\t/>\r\n);","export default function Prescription(ordonnancePreconisee) {\r\n\r\n  // L'ordonnance préconisée est reçue du backend et est un objet de la forme suivante :\r\n  // \t.medicamentsPreconises[]\r\n  // \t\t.description\r\n  // \t\t.dureeMin\r\n  // \t\t.dureeMax\r\n  // \t\t.idDouleur\r\n  // \t\t.numOrdonnance\r\n  // \t\t.numMedicament\r\n  // \t\t.compatibilites[]\r\n  // \t\t\t.produit\r\n  // \t\t\t\t.code\r\n  // \t\t\t\t.designation\r\n  // \t\t\t\t.id\r\n  // \t\t\t\t.indesirable\r\n  // \t\t\t\t.indication\r\n  // \t\t\t.dosages\r\n  // \t\t\t.formes\r\n\r\n  this.medicamentsPreconises = ordonnancePreconisee ? ordonnancePreconisee.medicamentsPreconises : []\r\n\r\n  this.nbMedicaments = this.medicamentsPreconises.length\r\n\r\n  this.getProduits = function(numMedicament) {\r\n    if (this.medicamentsPreconises[numMedicament] && this.medicamentsPreconises[numMedicament].compatibilites) {\r\n      return this.medicamentsPreconises[numMedicament].compatibilites.map(compatibilite => compatibilite.produit)\r\n    }\r\n    return null\r\n  }\r\n\r\n  this.getDesignationsProduits = function(numMedicament) {\r\n    const produits = this.getProduits(numMedicament)\r\n    if (produits) {\r\n      return produits.map(produit => produit.designation)\r\n    }\r\n    return null\r\n  }\r\n\r\n\r\n}","import React from 'react'\r\nimport { Popup, Icon, Button, Label } from 'semantic-ui-react'\r\nimport { blue, teal } from '@material-ui/core/colors'\r\n\r\n\r\n\r\nexport const BoutonAjouter = function ({ handleClick, title, ...others }) {\r\n\ttitle = title ? title : 'ajouter'\r\n\tconst props = { handleClick, title, ...others }\r\n\treturn <Bouton icon='add' color='teal' {...props} />\r\n\r\n}\r\n\r\nexport const BoutonSupprimer = function ({ index, handleClick, title, ...others }) {\r\n\ttitle = title ? title : 'supprimer'\r\n\tconst props = { index, handleClick, title, ...others }\r\n\treturn <Bouton icon='delete' color='red' {...props} />\r\n}\r\n\r\nexport const BoutonModifier = function ({ index, handleClick, title, ...others }) {\r\n\ttitle = title ? title : 'modifier'\r\n\tconst props = { index, handleClick, title, ...others }\r\n\treturn <Bouton icon='pencil alternate' {...props} />\r\n}\r\n\r\nexport const BoutonValider = function ({ index, handleClick, title, ...others }) {\r\n\ttitle = title ? title : 'valider'\r\n\tconst props = { index, handleClick, title, ...others }\r\n\treturn <Bouton icon='check' color='green' {...props} />\r\n}\r\n\r\nexport const BoutonAnnuler = function ({ index, handleClick, title, ...others }) {\r\n\ttitle = title ? title : 'annuler'\r\n\tconst props = { index, handleClick, title, ...others }\r\n\treturn <Bouton icon='undo' color='red' {...props} />\r\n}\r\n\r\n\r\nexport const Bouton = function ({ index, handleClick, title, icon, color, long, ...others }) {\r\n\r\n\tindex = index ? index : 0\r\n\thandleClick = handleClick ? handleClick : () => { }\r\n\r\n\tif (long !== true && icon && title) {\r\n\t\treturn (\r\n\t\t\t<Popup content={title} trigger={\r\n\t\t\t\t<Label as='a' size='tiny'\r\n\t\t\t\t\tonClick={event => handleClick(event, index)} {...others}>\r\n\t\t\t\t\t<Icon name={icon} color={color ? color : blue} link style={{ marginRight: 0, marginLeft: 0}} />\r\n\t\t\t\t</Label >\r\n\t\t\t} />)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Button size='tiny' compact icon labelPosition='left'\r\n\t\t\t\tonClick={event => handleClick(event, index)} {...others}>\r\n\t\t\t\t{icon &&\r\n\t\t\t\t\t<Icon name={icon} color={color ? color : teal} />\r\n\t\t\t\t}\r\n\t\t\t\t{title}\r\n\t\t\t</Button >)\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n","import React, { Fragment } from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport { Form, Message } from \"semantic-ui-react\";\r\nimport * as formAdapter from \"../globals/redux/reduxFormAdapter\"\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { BoutonAjouter, BoutonSupprimer } from \"../globals/util-components/Boutons\";\r\n\r\nexport default function PrescriptionLibreForm({ numMedicaments, handleClickAjouter, handleClickSupprimer }) {\r\n\treturn (\r\n\t\t<Fragment> {\r\n\t\t\tArray.isArray(numMedicaments) && numMedicaments.map((numMedicament, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Fragment key={index}>\r\n\t\t\t\t\t\t{(index === 0) ?\r\n\t\t\t\t\t\t\t<Message info>Vous pouvez saisir librement ci-dessous les médicaments à ajouter à votre prescription </Message> : ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<LigneDispensation numMedicament={numMedicament} handleClickSupprimer={handleClickSupprimer} />\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t<div style={{ paddingTop: '1rem' }}>\r\n\t\t\t\t<BoutonAjouter title='Ajouter un médicament' handleClick={handleClickAjouter} />\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nconst LigneDispensation = function ({ numMedicament, handleClickSupprimer }) {\r\n\treturn (\r\n\t\t<Grid container spacing={1} >\r\n\t\t\t<Grid item xs={4}>\r\n\t\t\t\t<Field component={Form.Input} label='Désignation' name={'medicament' + numMedicament} placeholder='médicament' />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={3}>\r\n\t\t\t\t<Field component={Form.Input} label='Dosage' name={'dosage' + numMedicament + 0} placeholder='dosage' />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={3}>\r\n\t\t\t\t<Field component={Form.Input} label=\"Qté/prise\" name={'quantite' + numMedicament} placeholder=\"Nb comprimés\" />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={3}>\r\n\t\t\t\t<Field component={formAdapter.FormSelect} label=\"Forme\" name={'forme' + numMedicament} placeholder=\"Comprimé ...\"\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{ key: \"forme1\", text: \"Comprimé\", value: \"comprimé(s)\" },\r\n\t\t\t\t\t\t{ key: \"forme2\", text: \"Gélule\", value: \"gélule(s)\" }\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={4}>\r\n\t\t\t\t<Field component={Form.Input} label=\"Fréquence\" name={'frequence' + numMedicament} placeholder=\"Nb fois / jour\" />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={3}>\r\n\t\t\t\t<Field component={Form.Input} label=\"Durée\" name={'duree' + numMedicament} placeholder=\"Nb jours\" />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={1}>\r\n\t\t\t\t<div style={{ marginLeft: '0.5rem', marginTop: '50%' }} >\r\n\t\t\t\t\t<BoutonSupprimer index={numMedicament} handleClick={handleClickSupprimer} title='Supprimer le médicament' />\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport PrescriptionLibreForm from \"./PrescriptionLibreForm\";\r\n\r\nclass PrescriptionLibreController extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tnumMedicaments: [],\r\n\t\t}\r\n\t\tthis.ajouterMedicament = this.ajouterMedicament.bind(this)\r\n\t\tthis.supprimerMedicament = this.supprimerMedicament.bind(this)\r\n\t}\r\n\r\n\tajouterMedicament(event) {\r\n\t\tlet prochainNumMedicament = this.props.debutCompteur\r\n\t\tif (this.state.numMedicaments.length > 0) {\r\n\t\t\tprochainNumMedicament = this.state.numMedicaments[this.state.numMedicaments.length - 1] + 1\r\n\t\t}\r\n\t\tif (!prochainNumMedicament) {\r\n\t\t\tprochainNumMedicament = 0\r\n\t\t}\r\n\t\tlet numMedicaments = [prochainNumMedicament]\r\n\t\tif (Array.isArray(this.state.numMedicaments)) {\r\n\t\t\tnumMedicaments = [...this.state.numMedicaments, prochainNumMedicament]\r\n\t\t}\r\n\t\tthis.setState({ numMedicaments })\r\n\t\tevent.preventDefault()\r\n\t}\r\n\r\n\tsupprimerMedicament(event, numMedicament) {\r\n\t\tlet index = this.state.numMedicaments.indexOf(numMedicament)\r\n\t\tif (index !== undefined) {\r\n\t\t\tlet numMedicaments = [...this.state.numMedicaments]\r\n\t\t\tnumMedicaments.splice(index, 1)\r\n\t\t\tthis.setState({ numMedicaments })\r\n\t\t}\r\n\t\tevent.preventDefault()\r\n\t}\r\n\r\n\trender = () =>\r\n\t\t<PrescriptionLibreForm\r\n\t\t\thandleClickAjouter={this.ajouterMedicament}\r\n\t\t\thandleClickSupprimer={this.supprimerMedicament}\r\n\t\t\tnumMedicaments={this.state.numMedicaments}\r\n\t\t/>\r\n\r\n}\r\n\r\nexport default PrescriptionLibreController;\r\n","import React, { Fragment } from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport { Form, Message, Header, Divider, Label, Icon } from \"semantic-ui-react\";\r\nimport * as formAdapter from \"../globals/redux/reduxFormAdapter\"\r\nimport { FormSelect } from \"../globals/redux/reduxFormAdapter\"\r\nimport Prescription from \"./PrescriptionObj\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PrescriptionLibre from \"./PrescriptionLibreController\";\r\n\r\nclass PrescriptionForm extends React.Component {\r\n\r\n\t// On reçoit la prescription préconisée en props. Cet objet est utilisé pour construire la Prescription\r\n\tconstructor(props) {\r\n\r\n\t\tsuper(props)\r\n\t\tthis.prescriptionChoisie = new Prescription(props.prescription)\r\n\t\tthis.recapPrescription = props.recapPrescription\r\n\t\tthis.medicaments = this.prescriptionChoisie.medicamentsPreconises\r\n\t\tthis.libellesMedicaments = this.medicaments.map(\r\n\t\t\t(medicament, numMedicament) => this.prescriptionChoisie.getDesignationsProduits(numMedicament).join(' + ')\r\n\t\t)\r\n\t\tthis.state = {\r\n\t\t\tnbMedicaments: this.medicaments.length\r\n\t\t}\r\n\t}\r\n\r\n\tgetNbMedicaments() {\r\n\t\treturn this.state.nbMedicaments\r\n\t}\r\n\r\n\trender = () =>\r\n\t\t<Fragment>\r\n\t\t\t<Message info>Veuillez renseigner la posologie dans le formulaire ci-dessous</Message>\r\n\t\t\t<Form size='tiny' onSubmit={() => this.props.onSubmit(this.prescriptionSaisie())}>\r\n\t\t\t\t{this.prescriptionChoisie && this.prescriptionChoisie.medicamentsPreconises.map(\r\n\t\t\t\t\t(medicament, numMedicament) =>\r\n\t\t\t\t\t\tthis.formulaireMedicament(numMedicament)\r\n\t\t\t\t)}\r\n\t\t\t\t<PrescriptionLibre debutCompteur={this.medicaments.length} />\r\n\t\t\t\t<Field\r\n\t\t\t\t\tcomponent={formAdapter.renderTextArea}\r\n\t\t\t\t\tlabel=\"Recommandations\"\r\n\t\t\t\t\tname=\"recommandations\"\r\n\t\t\t\t\tplaceholder=\"Conseils, effets indésirables à surveiller, cas d'arrêt du traitement...\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Message>\r\n\t\t\t\t\t<Divider horizontal fitted><Header as='h5'>Récapitulatif</Header></Divider>\r\n\t\t\t\t\t{this.recapPrescription(this.prescriptionSaisie())}\r\n\t\t\t\t</Message>\r\n\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t<Form.Button type='submit' size='tiny' primary icon labelPosition='left'>\r\n\t\t\t\t\t\t<Icon name='check' color='green' />\r\n\t\t\t\t\t\tValider\r\n\t\t\t\t\t</Form.Button>\r\n\t\t\t\t\t<Form.Button size='tiny' onClick={this.props.reset} icon labelPosition='left'>\r\n\t\t\t\t\t\t<Icon name='delete' color='red' />\r\n\t\t\t\t\t\tAnnuler\r\n\t\t\t\t\t</Form.Button>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t\t</Fragment>\r\n\r\n\r\n\tformulaireMedicament(numMedicament) {\r\n\t\treturn (\r\n\t\t\t<React.Fragment key={numMedicament}>\r\n\t\t\t\t<div style={{ padding: '1rem 0' }}><Label>{this.libellesMedicaments[numMedicament]}</Label></div>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname={'medicament' + numMedicament}\r\n\t\t\t\t\ttype='hidden'\r\n\t\t\t\t\tindex={numMedicament}\r\n\t\t\t\t\tvalue={this.libellesMedicaments[numMedicament]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Grid container spacing={1}>\r\n\t\t\t\t\t{this.prescriptionChoisie.getProduits(numMedicament).map((produit, numProduit) =>\r\n\t\t\t\t\t\t<Grid item xs={2} key={numProduit}>\r\n\t\t\t\t\t\t\t<Field component={Form.Input} label={numProduit === 0 ? 'Dosage' : ''} name={'dosage' + numMedicament + numProduit} placeholder={produit.designation} required />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t<Field component={Form.Input} label=\"Qté/prise\" name={'quantite' + numMedicament} placeholder=\"Nb comprimés\" required />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t<Field component={FormSelect} label=\"Forme\" name={'forme' + numMedicament} placeholder=\"Comprimé ...\"\r\n\t\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t\t{ key: \"forme1\", text: \"Comprimé\", value: \"comprimé(s)\" },\r\n\t\t\t\t\t\t\t\t{ key: \"forme2\", text: \"Gélule\", value: \"gélule(s)\" }\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<Field component={Form.Input} label=\"Fréquence\" name={'frequence' + numMedicament} placeholder=\"Nb fois par jour\" required />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t<Field component={Form.Input} label=\"Durée\" name={'duree' + numMedicament} placeholder=\"Nb de jours\" required />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\tprescriptionSaisie() {\r\n\r\n\t\tconst dosagesProduits = (numMedicament) => {\r\n\t\t\tconst produits = this.prescriptionChoisie.getProduits(numMedicament)\r\n\t\t\tif (Array.isArray(produits)) {\r\n\t\t\t\tconst dosagesProduits = produits.map(\r\n\t\t\t\t\t(produit, numProduit) => {\r\n\t\t\t\t\t\tconst dosage = this.props['dosage' + numMedicament + numProduit]\r\n\t\t\t\t\t\treturn { designation: produit.designation, dosage }\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\treturn dosagesProduits\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t}\r\n\t\tconst autresChamps = ['quantite', 'forme', 'frequence', 'duree']\r\n\r\n\t\tlet prescpription = {\r\n\t\t\tnbMedicaments: this.medicaments.length,\r\n\t\t\tmedicaments: [],\r\n\t\t\trecommandations: this.props.recommandations\r\n\t\t}\r\n\t\tfor (let numMedicament = 0; numMedicament < prescpription.nbMedicaments; numMedicament++) {\r\n\t\t\tprescpription.medicaments[numMedicament] = {\r\n\t\t\t\tlibelle: this.libellesMedicaments[numMedicament], // concat(produits, ' + ' )\r\n\t\t\t\tproduits: dosagesProduits(numMedicament),  // Array of {produit, dosage}\r\n\t\t\t}\r\n\t\t\tautresChamps.forEach(champ => {\r\n\t\t\t\tprescpription.medicaments[numMedicament][champ] = this.props[champ + numMedicament]\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn prescpription\r\n\t}\r\n\r\n}\r\n\r\nexport default PrescriptionForm;\r\n","import React from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { reduxForm } from \"redux-form\";\r\nimport { setFormValues } from '../redux/FormActions';\r\n\r\nexport default function FormHandler({ component, formName, reset, children, ...others }) {\r\n\r\n\tlet WrappedComponent = component ? component : children;\r\n\tWrappedComponent = handleForm(WrappedComponent, formName, reset);\r\n\treturn <WrappedComponent {...formName} {...others}> {children} </WrappedComponent>;\r\n}\r\n\r\nexport function handleForm(WrappedComponent, formName, reset) {\r\n\r\n\tconst mapStateToProps = state => {\r\n\r\n\t\tlet savedValues\r\n\t\tlet currentValues = {}\r\n\r\n\t\tif (!reset || reset !== true) {\r\n\t\t\tif (state.appForms && formName) {\r\n\t\t\t\tsavedValues = state.appForms[formName]\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (state.form[formName]) {\r\n\t\t\tcurrentValues = state.form[formName].values\r\n\t\t}\r\n\t\tif (savedValues) { \r\n\t\t\treturn {\r\n\t\t\t\tinitialValues: savedValues,\r\n\t\t\t\t[formName]: {...savedValues, ...currentValues},\r\n\t\t\t\t...currentValues\r\n\t\t\t}\r\n\t \t} else {\r\n\t\t\t return {\r\n\t\t\t\t[formName]: {...currentValues},\r\n\t\t\t\t...currentValues\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclass FormHandler extends React.Component {\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\tif (reset && reset === true) {\r\n\t\t\t\tsetFormValues(formName, null)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcomponentDidUpdate(prevProps) {\r\n\t\t\tif (reset && reset === true) {\r\n\t\t\t\tsetFormValues(formName, null)\r\n\t\t\t} else if (JSON.stringify(prevProps[formName]) !== JSON.stringify(this.props[formName])) {\r\n\t\t\t\tsetFormValues(formName, this.props[formName])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t\treturn <WrappedComponent {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\treturn connect(mapStateToProps)(reduxForm({ form: formName })(FormHandler))\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { connect } from 'react-redux'\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport PrescriptionForm from \"./PrescriptionForm\";\r\nimport FicheDouleurComponent from './FicheDouleurComponent';\r\nimport { dataTypes, setPrescriptionSaisie } from './services/OrdonnanceActions';\r\nimport { goToRoute, routesConfig } from '../globals/services/routeService';\r\nimport { formNames } from '../globals/redux/FormActions';\r\nimport FormHandler from '../globals/hoc/FormHandler';\r\n\r\n\r\nconst FORM_NAME = formNames.PRESCRIPTION_FORM\r\n\r\nconst mapStateToProps = state => ({\r\n\tprescriptionChoisie: state.ordonnance[dataTypes.PRESCRIPTION_CHOISIE],\r\n})\r\n\r\nclass PrescriptionControler extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.submitPrescription.bind(this)\r\n\t}\r\n\r\n\tsubmitPrescription = prescriptionSaisie => {\r\n\t\t// sauvegarde les valeurs saisies pour les réinjecter en initialValues\r\n\t\t// lorsqu'on revient sur le formulaire\r\n\t\tsetPrescriptionSaisie(prescriptionSaisie)\r\n\t\tgoToRoute(this.props)(routesConfig.FORMULAIRE_ORDONNANCE)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<FicheDouleurComponent prescriptionChoisie={this.props.prescriptionChoisie} />\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.prescriptionChoisie &&\r\n\t\t\t\t\t<FormHandler component={PrescriptionForm}\r\n\t\t\t\t\t\tformName={FORM_NAME}\r\n\t\t\t\t\t\tonSubmit={this.submitPrescription}\r\n\t\t\t\t\t\tprescription={this.props.prescriptionChoisie}\r\n\t\t\t\t\t\trecapPrescription={recapitulerPrescription}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport const recapitulerPrescription = (prescription) => {\r\n\tconst recapDosage = medicament => (\r\n\t\tArray.isArray(medicament.produits) ? (\r\n\t\t\tmedicament.produits\r\n\t\t\t\t.filter(produit => produit.dosage)\r\n\t\t\t\t.map(produit => produit.designation + ' ' + produit.dosage)\r\n\t\t\t\t.join(' + ')\r\n\t\t) : null\r\n\t)\r\n\tif (prescription && Array.isArray(prescription.medicaments)) {\r\n\t\treturn (\r\n\t\t\tprescription.medicaments.map(\r\n\t\t\t\t(medicament, numMedicament) => (\r\n\t\t\t\t\t<div key={numMedicament}> {\r\n\t\t\t\t\t\trecapDosage(medicament)\r\n\t\t\t\t\t\t+ (medicament.quantite && medicament.forme ? ', ' + medicament.quantite + ' ' + medicament.forme : '')\r\n\t\t\t\t\t\t+ (medicament.frequence ? ', ' + medicament.frequence + ' fois par jour' : '')\r\n\t\t\t\t\t\t+ (medicament.duree ? ' pendant ' + medicament.duree + ' jours' : '')\r\n\t\t\t\t\t} </div>\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n\treturn null\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrescriptionControler)\r\n","import React from 'react'\r\nimport { Field } from 'redux-form';\r\nimport { Form, Popup } from 'semantic-ui-react';\r\n\r\n\r\nexport default class FormInput extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.inputRef = React.createRef()\r\n\t\tthis.openPopup = this.openPopup.bind(this)\r\n\t\tthis.closePopup = this.closePopup.bind(this)\r\n\t\tthis.clickInput = this.clickInput.bind(this)\r\n\t\tthis.checkError()\r\n\r\n\t\tthis.state = {\r\n\t\t\topenPopup: true,\r\n\t\t\tindexDisplayError: 0,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tthis.checkError()\r\n\t}\r\n\r\n\tcheckError() {\r\n\t\tif (this.props.form) {\r\n\t\t\tthis.error = this.props.form['error.' + this.props.name]\r\n\t\t\tif (!this.error) {\r\n\t\t\t\tthis.error = this.props.form[this.props.name + '.error']\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.error && this.props.error) {\r\n\t\t\tthis.error = this.props.error\r\n\t\t}\r\n\t\tif (!this.error && this.props.errors) {\r\n\t\t\tthis.error = this.props.errors[this.props.name]\r\n\t\t}\r\n\t}\r\n\r\n\tclickInput() {\r\n\t\tif (this.error) {\r\n\t\t\tthis.setState({ indexDisplayError: this.state.indexDisplayError + 1 })\r\n\t\t}\r\n\t}\r\n\r\n\topenPopup() {\r\n\t\tthis.setState({ openPopup: true })\r\n\t}\r\n\r\n\tclosePopup() {\r\n\t\tif (this.state.indexDisplayError > 0) {\r\n\t\t\tthis.setState({ openPopup: false })\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst props = {\r\n\t\t\t...this.props,\r\n\t\t\terror: this.error !== undefined,\r\n\t\t\tname: this.props.name,\r\n\t\t\tonMouseOver: () => this.openPopup(),\r\n\t\t\tonMouseOut: () => this.closePopup(),\r\n\t\t\tonClick: () => this.clickInput(),\r\n\t\t}\r\n\r\n\t\tlet input = props.value !== undefined ?\r\n\t\t\t<Form.Input {...props} /> : <Field component={Form.Input} {...props} />\r\n\r\n\r\n\t\tif (this.error) {\r\n\t\t\tinput =\r\n\t\t\t\t<Popup open={this.state.openPopup} size='tiny' mouseLeaveDelay={500}\r\n\t\t\t\t\thoverable on='hover' trigger={<span ref={this.inputRef}>{input}</span>}>\r\n\t\t\t\t\t<Popup.Content>\r\n\t\t\t\t\t\t<div className='error'>{this.error}</div>\r\n\t\t\t\t\t</Popup.Content>\r\n\t\t\t\t</Popup>\r\n\t\t}\r\n\r\n\t\treturn input\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport { Form, Message, Icon } from \"semantic-ui-react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport * as formAdapter from \"../globals/redux/reduxFormAdapter\";\r\nimport FormInput from \"../globals/util-components/FormInput\";\r\nimport { formNames } from \"../globals/redux/FormActions\";\r\n\r\nexport default class OrdonnanceForm extends React.Component {\r\n\r\n\trender() {\r\n\r\n\t\tconst form = this.props[formNames.INFOS_PATIENT_FORM];\r\n\r\n\t\treturn (\r\n\t\t\t<Form size='small' onSubmit={(event) => this.props.onSubmit(form, event)}>\r\n\t\t\t\t<Message info>Veuillez renseigner les informations du patient dans le formulaire ci-dessous</Message>\r\n\t\t\t\t<Grid container spacing={1}>\r\n\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t<FormInput form={form} label=\"Nom de famille\" name='nomPatient' placeholder=\"Nom obligatoire\" required />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t<FormInput form={form} label=\"Nom usuel\" name='nomUsuPatient' placeholder=\"Facultatif\" />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t<FormInput form={form} label=\"Prénom\" name='prenomPatient' placeholder=\"Prénom\" required />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={3}>\r\n\t\t\t\t\t\t<FormInput form={form} name='dateNaissance' placeholder=\"jj/mm/aaaa\" label=\"Date naissance\" required />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t\t<FormInput form={form} label=\"N° immatriculation\" name='insee' placeholder=\"n° sur 13 car\" required />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={6}>\r\n\t\t\t\t\t\t<div className='field'><label>Sexe</label></div>\r\n\t\t\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tcomponent={formAdapter.renderRadio}\r\n\t\t\t\t\t\t\t\tlabel=\"Masculin\"\r\n\t\t\t\t\t\t\t\tclassName='field'\r\n\t\t\t\t\t\t\t\tname=\"sexe\"\r\n\t\t\t\t\t\t\t\tradioValue='M'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tcomponent={formAdapter.renderRadio}\r\n\t\t\t\t\t\t\t\tlabel=\"Féminin\"\r\n\t\t\t\t\t\t\t\tclassName='field'\r\n\t\t\t\t\t\t\t\tname=\"sexe\"\r\n\t\t\t\t\t\t\t\tradioValue='F'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<p></p>\r\n\t\t\t\t<Form.Group inline>\r\n\t\t\t\t\t<Form.Button type='submit' size='tiny' compact primary icon labelPosition='left'>\r\n\t\t\t\t\t\t<Icon name='check' color='green' />\r\n\t\t\t\t\t\tValider l'ordonnance\r\n\t\t\t\t\t</Form.Button>\r\n\t\t\t\t\t<Form.Button type='reset' size='tiny' compact icon labelPosition='left'>\r\n\t\t\t\t\t\t<Icon name='delete' color='red' />\r\n\t\t\t\t\t\tAnnuler\r\n\t\t\t\t\t\t</Form.Button>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t\t)\r\n\t}\r\n\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { Message, Divider, Header, Label } from 'semantic-ui-react'\r\n\r\nimport { dataTypes, setOrdonnanceEmise } from './services/OrdonnanceActions'\r\nimport { recapitulerPrescription } from './PrescriptionController'\r\nimport OrdonnanceForm from './OrdonnanceForm';\r\nimport { formNames } from '../globals/redux/FormActions'\r\nimport {handleForm} from '../globals/hoc/FormHandler'\r\n\r\nconst FORM_NAME = formNames.INFOS_PATIENT_FORM\r\n\r\nconst mapStateToProps = state => {\r\n\tconst prescriptionSaisie = state.ordonnance[dataTypes.PRESCRIPTION_SAISIE]\r\n\tconst libelleDouleur = state.ordonnance[dataTypes.PRESCRIPTION_CHOISIE] ?\r\n\t\tstate.ordonnance[dataTypes.PRESCRIPTION_CHOISIE].nomenclatureDouleur.libelle : ''\r\n\treturn {\r\n\t\tprescriptionSaisie, libelleDouleur,\r\n\t}\r\n}\r\n\r\n\r\nclass OrdonnanceController extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.submitOrdonnance.bind(this)\r\n\t}\r\n\r\n\tsubmitOrdonnance = (infosPatient, event) => {\r\n\t\tlet ordonnance = {\r\n\t\t\tinfosPatient,\r\n\t\t\tprescription: this.props.prescriptionSaisie\r\n\t\t}\r\n\t\tsetOrdonnanceEmise(ordonnance, this.props.history)\r\n\t\tevent.preventDefault()\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst prescription = this.props.prescriptionSaisie\r\n\t\tconst infosPatient = this.props[FORM_NAME]\r\n\t\treturn (\r\n\t\t\tprescription ?\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<h3>{this.props.libelleDouleur}</h3>\r\n\t\t\t\t\t<OrdonnanceForm onSubmit={this.submitOrdonnance}\t{...this.props} />\r\n\t\t\t\t\t<p></p>\r\n\r\n\t\t\t\t\t<Message>\r\n\r\n\t\t\t\t\t\t<Divider horizontal fitted><Header as='h5'>Votre ordonnance</Header></Divider>\r\n\r\n\t\t\t\t\t\t{infosPatient && (\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<Label>Patient</Label>\r\n\t\t\t\t\t\t\t\t<div style={{ margin: '20px 10px' }}>\r\n\t\t\t\t\t\t\t\t\t{recapitulerInfosPatient(infosPatient)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<Label>Prescription</Label>\r\n\t\t\t\t\t\t<div style={{ margin: '20px 10px' }}>\r\n\t\t\t\t\t\t\t{recapitulerPrescription(prescription)}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tprescription.recommandations &&\r\n\t\t\t\t\t\t\t\t<p> <b> Recommandations </b>\r\n\t\t\t\t\t\t\t\t\t<div className='infosBase'>{prescription.recommandations}</div>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Message>\r\n\t\t\t\t</Fragment>\r\n\t\t\t\t:\r\n\t\t\t\t<Message error> Erreur : Aucune prescription saisie !!! </Message>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport const recapitulerInfosPatient = (infosPatient) => {\r\n\tif (infosPatient) {\r\n\t\treturn (\r\n\t\t\t<div> {\r\n\t\t\t\tObject.keys(infosPatient).map(\r\n\t\t\t\t\tkey => {\r\n\t\t\t\t\t\tswitch (key) {\r\n\t\t\t\t\t\t\tcase 'nomPatient': return infosPatient[key]\r\n\t\t\t\t\t\t\tcase 'dateNaissance': return ' - né(e) le ' + infosPatient[key]\r\n\t\t\t\t\t\t\tcase 'insee': return <p>n° immatriculation {infosPatient[key]}</p>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase 'nomUsuPatient': return ' - ' + infosPatient[key]\r\n\t\t\t\t\t\t\tcase 'prenomPatient': return ' - ' + infosPatient[key]\r\n\t\t\t\t\t\t\tdefault: return ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t} </div>\r\n\t\t)\r\n\r\n\t}\r\n\treturn null\r\n}\r\n\r\nexport default connect(mapStateToProps)(handleForm(OrdonnanceController, FORM_NAME))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Message, Button, Icon } from 'semantic-ui-react'\r\nimport { dataTypes } from './services/OrdonnanceActions';\r\nimport ComponentLoader from '../globals/util-components/ComponentLoader';\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tordonnance: state.ordonnance[dataTypes.ORDONNANCE_EMISE],\r\n\t}\r\n}\r\n\r\nfunction OrdonnanceConfirm({ ordonnance, ...others }) {\r\n\treturn (\r\n\t\t<ComponentLoader loadedObject={ordonnance}>\r\n\t\t\t{ordonnance && ordonnance.fileURL ?\r\n\t\t\t\t<Message info>\r\n\t\t\t\t\t<p>Votre ordonnance a bien été enregistrée.</p>\r\n\t\t\t\t\t<p>Si elle ne s'affiche pas automatiquement, vous pouvez y accéder en cliquant le lien suivant</p>\r\n\t\t\t\t\t<a id='ordo' title='ordonnance émise' href={ordonnance.fileURL} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t\t<Button primary icon labelPosition='left' size='small'>\r\n\t\t\t\t\t\t\t<Icon name='file outline' />\r\n\t\t\t\t\t\t\tEditer l'ordonnance\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</Message>\r\n\t\t\t\t:\r\n\t\t\t\t<Message error>\r\n\t\t\t\t\tUn problème est survenu : l'ordonnance n'a pas pu être émise. Veuillez recommencer ultérieurement\r\n\t\t\t\t</Message>\r\n\t\t\t}\r\n\t\t</ComponentLoader>\r\n\r\n\r\n\t)\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrdonnanceConfirm)\r\n\r\n","import React from 'react'\r\nimport { Popup, Icon } from 'semantic-ui-react'\r\n\r\n\r\nexport default function Helper({ text, helpText, type, ...otherProps }) {\r\n\r\n\tlet name = 'question', color = 'blue'\r\n\r\n\tswitch (type) {\r\n\t\tcase 'info' : name='info'; break\r\n\t\tcase 'warning' : name='exclamation'; color='yellow'; break\r\n\t\tcase 'error' : name='bolt'; color='red'; break\r\n\t\tdefault : \r\n\t}\r\n\r\n\tif (text) {\r\n\t\tname += ' circle'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<span style={{ verticalAlign: 'middle' }}>\r\n\t\t\t\t{text}\r\n\t\t\t</span>\r\n\t\t\t<Popup size='small' mouseLeaveDelay={200} hoverable on='hover' trigger={\r\n\t\t\t\t<Icon name={name} color={color} \r\n\t\t\t\t\tstyle={{ marginLeft: '0.7rem', marginBottom: '0.5rem' }} \r\n\t\t\t\t\t{...otherProps}\r\n\t\t\t\t/>\r\n\t\t\t}>\r\n\t\t\t\t<Popup.Content >{helpText}</Popup.Content>\r\n\t\t\t</Popup>\r\n\t\t</>\r\n\t)\r\n}","import React, { useContext } from 'react'\r\nimport { Grid, FormGroup } from 'semantic-ui-react'\r\nimport { useEffect } from 'react'\r\n\r\nimport FormInput from '../globals/util-components/FormInput'\r\nimport { NomenclatureContext } from './GestionNomenclatureController'\r\nimport Helper from '../globals/util-components/Helper'\r\nimport { FormSelect } from '../globals/redux/reduxFormAdapter'\r\n\r\n\r\nexport default function ProduitForm({ produit, majProduit, numProduit, ...rest }) {\r\n\r\n\t// hook useContext()\r\n\tlet { listeProduits, listeUnitesDosage } = useContext(NomenclatureContext)\r\n\r\n\tconst produitsProposes = listeProduits.map(\r\n\t\titemProduit => ({ value: itemProduit.id, text: itemProduit.designation })\r\n\t)\r\n\tconst unitesDosage = listeUnitesDosage.map(\r\n\t\tunite => ({ value: unite, text: unite })\r\n\t)\r\n\r\n\tif (!produit) {\r\n\t\tproduit = {}\r\n\t}\r\n\tif (!produit.uniteDosage) {\r\n\t\tproduit.uniteDosage = 'mg'\r\n\t}\r\n\r\n\tconst listeDosages = produit.listeDosages ? produit.listeDosages : []\r\n\r\n\t// hook useEffect() : focus sur le dosage en cours de saisie après chaque rendu\r\n\tuseEffect(() => {\r\n\t\tif (produit.focus) {\r\n\t\t\tlet input = document.querySelector(`input[name=${produit.focus}]`)\r\n\t\t\tproduit.focus = null\r\n\t\t\tif (input) {\r\n\t\t\t\tinput.focus()\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}, [produit.focus]);\r\n\r\n\tfunction handleChangeData(attribut, data) {\r\n\t\tif (majProduit) {\r\n\t\t\tconst { value } = data\r\n\t\t\tlet designation = {}\r\n\t\t\tif (attribut === 'idProduit') {\r\n\t\t\t\tdesignation.designation = listeProduits.find(\r\n\t\t\t\t\tproduitPropose => produitPropose.id === value\r\n\t\t\t\t)['designation']\r\n\t\t\t}\r\n\t\t\tmajProduit({ ...produit, [attribut]: value, ...designation })\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleChangeDosage(input, index) {\r\n\t\tconst dosage = input.value\r\n\t\tlet nouvelleListeDosages = [...listeDosages]\r\n\t\tif (!dosage) {\r\n\t\t\tnouvelleListeDosages.splice(index, 1)\r\n\t\t} else {\r\n\t\t\tnouvelleListeDosages[index] = dosage\r\n\t\t}\r\n\t\tif (majProduit) {\r\n\t\t\tmajProduit({ ...produit, listeDosages: nouvelleListeDosages, focus: input.name })\r\n\t\t}\r\n\t}\r\n\r\n\tfunction dosageError(index) {\r\n\t\tif (produit.errors['listeDosages[' + index + ']']) {\r\n\t\t\treturn produit.errors['listeDosages[' + index + ']']\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t// rendu\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid verticalAlign='middle' padded>\r\n\r\n\t\t\t\t{/* 1ère ligne : la désignation du produit à choisir dans la liste 'produitsProposes' */}\r\n\t\t\t\t<Grid.Row >\r\n\t\t\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t\t\t<FormSelect inline\r\n\t\t\t\t\t\t\tonChange={(e, data) => handleChangeData('idProduit', data)}\r\n\t\t\t\t\t\t\tlabel='Désignation'\r\n\t\t\t\t\t\t\ttitle='Choisissez un produit dans la liste proposée'\r\n\t\t\t\t\t\t\tname={'idProduit' + numProduit}\r\n\t\t\t\t\t\t\toptions={produitsProposes}\r\n\t\t\t\t\t\t\tvalue={produit ? produit.idProduit : ''}\r\n\t\t\t\t\t\t\tplaceholder='désignation'\r\n\t\t\t\t\t\t\trequired />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid.Row>\r\n\r\n\t\t\t\t{/* 2ème ligne : les dosages avec choix de l'unité de dosage + valorisation des doses possibles */}\r\n\t\t\t\t<Grid.Row >\r\n\t\t\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t\t\t<FormSelect inline required\r\n\t\t\t\t\t\t\tonChange={(e, data) => handleChangeData('uniteDosage', data)}\r\n\t\t\t\t\t\t\tlabel='Unité dosage'\r\n\t\t\t\t\t\t\tname={'uniteDosage' + numProduit}\r\n\t\t\t\t\t\t\toptions={unitesDosage}\r\n\t\t\t\t\t\t\tvalue={produit.uniteDosage} />\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Grid.Column width={3}>\r\n\t\t\t\t\t\t<Helper text='Dosages' helpText='renseigner les dosages possibles : 4 occurrences maxi' />\r\n\t\t\t\t\t</Grid.Column>\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\r\n\t\t\t\t\t<Grid.Column width={9}>\r\n\t\t\t\t\t\t<FormGroup widths={listeDosages.length + 1} unstackable>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{ listeDosages.map(\r\n\t\t\t\t\t\t\t\t(dosage, index) =>\r\n\t\t\t\t\t\t\t\t\t<FormInput placeholder='dosage'\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\terror={dosageError(index)}\r\n\t\t\t\t\t\t\t\t\t\tname={'dosage' + numProduit + '_' + index}\r\n\t\t\t\t\t\t\t\t\t\tvalue={dosage}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChangeDosage(e.target, index)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{ listeDosages.length < 4 &&\r\n\t\t\t\t\t\t\t\t<FormInput placeholder='dosage'\r\n\t\t\t\t\t\t\t\t\trequired={listeDosages.length === 0}\r\n\t\t\t\t\t\t\t\t\tname={'dosage' + numProduit + '_' + listeDosages.length}\r\n\t\t\t\t\t\t\t\t\tvalue=''\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => handleChangeDosage(e.target, listeDosages.length)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</Grid.Column>\r\n\r\n\r\n\t\t\t\t</Grid.Row>\r\n\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t)\r\n}","\r\nexport function verifierOrdonnanceType(ordonnanceType) {\r\n\tlet valide = true\r\n\tlet errors = {}\r\n\tif (!Array.isArray(ordonnanceType.medicaments) || ordonnanceType.medicaments.length === 0) {\r\n\t\terrors = { medicaments: \"L'ordonnance doit comporter au moins 1 médicament\" }\r\n\t\tvalide = false\r\n\t} else {\r\n\t\tordonnanceType.medicaments.forEach(\r\n\t\t\tmedicament => {\r\n\t\t\t\tconst isOK = verifierMedicament(medicament)\r\n\t\t\t\tvalide = valide === true ? isOK : false\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tordonnanceType.errors = errors\r\n\treturn valide\r\n}\r\n\r\nexport function verifierMedicament(medicament) {\r\n\tlet valide = true\r\n\tlet errors = {}\r\n\tif (!Array.isArray(medicament.formes) || medicament.formes.length === 0) {\r\n\t\terrors = { formes: \"Le médicament doit être associé au moins à 1 forme médicamenteuse\" }\r\n\t\tvalide = false\r\n\t}\r\n\tif (!Array.isArray(medicament.produits) || medicament.produits.length === 0) {\r\n\t\terrors = { produits: \"Le médicament doit comporter au moins 1 produit\" }\r\n\t\tvalide = false\r\n\t} else {\r\n\t\tmedicament.produits.forEach(\r\n\t\t\tproduit => {\r\n\t\t\t\tconst isOK = verifierProduit(produit)\r\n\t\t\t\tvalide = valide === true ? isOK : false\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tmedicament.errors = errors\r\n\treturn valide\r\n}\r\n\r\nexport function verifierProduit(produit) {\r\n\tlet valide = true\r\n\tlet errors = {}\r\n\tif (!produit.idProduit) {\r\n\t\terrors = { ...errors, idProduit: 'La désignation du produit est obligatoire' }\r\n\t\tvalide = false\r\n\t}\r\n\tif (!Array.isArray(produit.listeDosages) || produit.listeDosages.length === 0) {\r\n\t\terrors = { ...errors, listeDosages: 'Au moins un dosage est obligatoire (format numérique)' }\r\n\t\tvalide = false\r\n\t} else {\r\n\t\tproduit.listeDosages.forEach(\r\n\t\t\t(dosage, index) => {\r\n\t\t\t\tif (isNaN(dosage)) {\r\n\t\t\t\t\tconst errorKey = 'listeDosages[' + index + ']'\r\n\t\t\t\t\terrors = { ...errors, [errorKey]: 'Le dosage doit être numérique' }\r\n\t\t\t\t\tvalide = false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tproduit.errors = errors\r\n\treturn valide\r\n}\r\n\r\nexport function descriptionOrdonnanceType(ordonnanceType) {\r\n\tif (Array.isArray(ordonnanceType.medicaments)) {\r\n\t\tordonnanceType.description = ordonnanceType.medicaments.map(\r\n\t\t\tmedicament => descriptionMedicament(medicament)\r\n\t\t).join(\" ; \")\r\n\t}\r\n\treturn ordonnanceType.description\r\n}\r\n\r\nexport function descriptionMedicament(medicament) {\r\n\tif (Array.isArray(medicament.produits)) {\r\n\t\tmedicament.description = medicament.produits.map(\r\n\t\t\tproduit => descriptionProduit(produit)\r\n\t\t).join(\" + \")\r\n\t}\r\n\treturn medicament.description\r\n}\r\n\r\nexport function descriptionProduit(produit) {\r\n\tlet description = produit.designation\r\n\tif (Array.isArray(produit.listeDosages)) {\r\n\t\tdescription += \" \" + produit.listeDosages.join(\" ou \") + \" \" + produit.uniteDosage\r\n\t}\r\n\tproduit.description = description\r\n\treturn produit.description\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\nimport { Table, TableBody, TableRow, TableCell, Grid, Label, FormField } from 'semantic-ui-react'\r\nimport ProduitForm from './ProduitForm'\r\nimport { BoutonSupprimer, BoutonAjouter } from '../globals/util-components/Boutons'\r\nimport { verifierMedicament } from './services/GestionNomenclatureService'\r\nimport { NomenclatureContext } from './GestionNomenclatureController'\r\nimport Helper from '../globals/util-components/Helper'\r\n\r\n\r\nexport default function Medicament({ produits, formes, numMedicament, majMedicament }) {\r\n\r\n\t// Attributs\r\n\tconst medicament = { produits, formes }\r\n\r\n\tconst { formesMedicamenteuses } = useContext(NomenclatureContext)\r\n\tconst formesProposees = formesMedicamenteuses.map(\r\n\t\titem => ({ value: item, text: item })\r\n\t)\r\n\tconst isMedicamentOK = verifierMedicament(medicament)\r\n\r\n\t// Fonctions de gestion d'état\t\r\n\tfunction supprimerProduit(index) {\r\n\t\tif (majMedicament) {\r\n\t\t\tlet nouveauxProduits = [...produits]\r\n\t\t\tnouveauxProduits.splice(index, 1)\r\n\t\t\tmajMedicament({ ...medicament, produits: nouveauxProduits })\r\n\t\t}\r\n\t}\r\n\tfunction ajouterProduit() {\r\n\t\tif (majMedicament) {\r\n\t\t\tlet nouveauxProduits = produits ? [...produits, { idProduit: '' }] : [{ idProduit: '' }]\r\n\t\t\tmajMedicament({ ...medicament, produits: nouveauxProduits })\r\n\t\t}\r\n\t}\r\n\tfunction majProduit(index) {\r\n\t\treturn function (produit) {\r\n\t\t\tif (majMedicament) {\r\n\t\t\t\tlet nouveauxProduits = [...produits]\r\n\t\t\t\tnouveauxProduits.splice(index, 1, produit)\r\n\t\t\t\tmajMedicament({ ...medicament, produits: nouveauxProduits })\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction ajouterForme(value) {\r\n\t\tif (value && (!formes || formes.indexOf(value) < 0)) {\r\n\t\t\tmajMedicament({ ...medicament, formes: formes ? [...formes, value] : [value] })\r\n\t\t}\r\n\t}\r\n\tfunction supprimerForme(index) {\r\n\t\tlet nouvellesFormes = [...formes]\r\n\t\tnouvellesFormes.splice(index, 1)\r\n\t\tmajMedicament({ ...medicament, formes: nouvellesFormes })\r\n\r\n\t}\r\n\r\n\t// fonctions de rendu\r\n\tconst Titre = () => {\r\n\t\tconst helpText = <>\r\n\t\t\t\t<strong>Sont obligatoires les infos suivantes :</strong><br/>\r\n\t\t\t\tAu moins une forme médicamenteuse et un produit, avec pour chaque produit les dosages possibles\r\n\t\t\t</>\r\n\t\tlet titre\r\n\t\tif (Array.isArray(produits)) {\r\n\t\t\ttitre = produits.map(produit => produit.designation).join(' + ')\r\n\t\t}\r\n\t\tif (!titre) {\r\n\t\t\ttitre = <Helper helpText={helpText} text=\"Ajout d'un médicament\"/>\r\n\t\t} else if (!isMedicamentOK) {\r\n\t\t\ttitre = <Helper helpText={helpText} type='warning' text={titre} />\r\n\t\t}\r\n\t\treturn <h6>{titre}</h6>\t\t\r\n\t}\r\n\r\n\tconst Formes = () => {\r\n\t\treturn (\r\n\t\t\t<Grid padded>\r\n\t\t\t\t<Grid.Row>\t\t\t\t\r\n\t\t\t\t\t<Grid.Column width='6' style={{ paddingLeft: '0' }}>\r\n\t\t\t\t\t\t<FormField inline\r\n\t\t\t\t\t\t\tcontrol='select'\r\n\t\t\t\t\t\t\tlabel='Formes médicamenteuses'\r\n\t\t\t\t\t\t\tonChange={e => ajouterForme(e.target.value)}\r\n\t\t\t\t\t\t\tstyle={{color:'#a0a0a0'}}\r\n\t\t\t\t\t\t\tname={'formes' + numMedicament}\r\n\t\t\t\t\t\t\tdefaultValue=''\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value='' disabled>- choisir -</option>\r\n\t\t\t\t\t\t\t{formesProposees.map((forme, index) =>\r\n\t\t\t\t\t\t\t\t<option key={index} value={forme.value}>{forme.text}</option>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</FormField>\r\n\t\t\t\t\t</Grid.Column>\t\t\t\t\t\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t\t<Grid.Row> {\r\n\t\t\t\tArray.isArray(formes) && formes.length > 0 &&\r\n\t\t\t\t\t<Grid.Column width='16'>{\r\n\t\t\t\t\t\tformes.map(\r\n\t\t\t\t\t\t\t(forme, index) =>\r\n\t\t\t\t\t\t\t\t<Label key={index}>\r\n\t\t\t\t\t\t\t\t\t{forme} <BoutonSupprimer handleClick={e => supprimerForme(index)} />\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t}\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</Grid>\r\n\r\n\t\t)\r\n\t}\r\n\r\n\tconst DetailsProduits = () => {\r\n\t\tif (Array.isArray(produits) && produits.length >= 1) {\r\n\t\t\treturn <Table >\r\n\t\t\t\t<TableBody >\r\n\t\t\t\t\t{produits.map(\r\n\t\t\t\t\t\t(produit, index) =>\r\n\t\t\t\t\t\t\t<TableRow key={index} >\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<ProduitForm produit={produit}\r\n\t\t\t\t\t\t\t\t\t\tnumProduit={numMedicament + '_' + index}\r\n\t\t\t\t\t\t\t\t\t\tmajProduit={majProduit(index)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell verticalAlign='middle'>\r\n\t\t\t\t\t\t\t\t\t<BoutonSupprimer size='tiny' handleClick={() => supprimerProduit(index)} title='Supprimer ce produit' />\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t} else {\r\n\t\t\tajouterProduit()\r\n\t\t\treturn ''\r\n\t\t}\r\n\t}\r\n\r\n\t// rendu en retour\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Titre />\r\n\t\t\t<Formes />\t\r\n\t\t\t<DetailsProduits />\r\n\t\t\t{/* Bouton d'action : ajout d'un produit */}\r\n\t\t\t{isMedicamentOK &&\r\n\t\t\t\t<BoutonAjouter size='mini' long handleClick={() => ajouterProduit()} title='Ajouter un produit' />\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}","import dispatchData, { store } from \"../../globals/redux/store\";\r\nimport { apiURLs as urls, getResultFromUrl, postObjectToUrl } from \"../../globals/services/apiService\";\r\nimport { setFormValues, formNames, setFormErrors, resetFormErrors } from \"../../globals/redux/FormActions\";\r\nimport { goToRoute, routesConfig } from \"../../globals/services/routeService\";\r\nimport { descriptionOrdonnanceType } from \"./GestionNomenclatureService\";\r\n\r\nexport const namespace = 'nomenclature'\r\nexport const dataTypes = {\r\n\tORDONNANCE_TYPE: 'ordonnanceType',\r\n\tLISTE_ORDONNANCES_TYPES: 'listeOrdonnancesTypes',\r\n\tPROTOCOLE_DOULEUR: 'protocoleDouleur',\r\n\tNOMENCLATURE_DOULEUR: 'nomenclatureDouleur'\r\n}\r\n\r\nfunction getState(dataType) {\r\n\tconst state = store.getState()[namespace][dataType]\r\n\tif (!state) {\r\n\t\treturn undefined\r\n\t} else if (state instanceof Array) {\r\n\t\treturn [...state]\r\n\t} else if (state instanceof Object) {\r\n\t\treturn { ...state }\r\n\t}\r\n}\r\n\r\nexport async function validerOrdonnanceType(ordonnanceType, {history}) {\r\n\tdescriptionOrdonnanceType(ordonnanceType)\r\n\tdispatchData(dataTypes.ORDONNANCE_TYPE, ordonnanceType)\r\n\tgoToRoute(history)(routesConfig.ORDONNANCES_TYPES)\r\n}\r\n\r\nexport function ajouterOrdonnanceType(ordonnanceType) {\r\n\tlet listeOrdonnances = getState(dataTypes.LISTE_ORDONNANCES_TYPES)\r\n\tif (Array.isArray(listeOrdonnances)) {\r\n\t\tif (!listeOrdonnances.find(ordonnance => \r\n\t\t\t\tJSON.stringify(ordonnance) === JSON.stringify(ordonnanceType)\r\n\t\t)) {\r\n\t\t\tlisteOrdonnances.push(ordonnanceType)\r\n\t\t}\r\n\t} else {\r\n\t\tlisteOrdonnances = [ordonnanceType]\r\n\t}\r\n\tdispatchData(dataTypes.LISTE_ORDONNANCES_TYPES, listeOrdonnances);\r\n}\r\n\r\n/////\r\n\r\nexport async function setPreconisations(idDouleur) {\r\n\tconst result = await getResultFromUrl(urls.ficheDouleur(idDouleur))\r\n\tdispatchData(dataTypes.PRESCRIPTIONS, result.data);\r\n}\r\n\r\nexport async function setOrdonnanceEmise(ordonnance, history) {\r\n\r\n\tresetFormErrors(formNames.INFOS_PATIENT_FORM)\r\n\tlet result = await postObjectToUrl(ordonnance, urls.nouvelleOrdonnance)\r\n\tif (result.data) {\r\n\t\tconst obj = result.data\r\n\t\tif (obj.errors) {\r\n\t\t\tconsole.log(JSON.stringify(obj))\r\n\t\t\tsetFormErrors(formNames.INFOS_PATIENT_FORM, obj.errors)\r\n\t\t\tgoToRoute(history)(routesConfig.FORMULAIRE_ORDONNANCE)\r\n\t\t} else {\r\n\t\t\tgoToRoute(history)(routesConfig.CONFIRMATION_ORDONNANCE)\r\n\t\t\tconsole.log('L\\'ordonnance a bien été enregistrée')\r\n\t\t}\r\n\t} else {\r\n\t\tconsole.error('L\\'ordonnance n\\'a pas pu être correctement enregistrée')\r\n\t}\r\n\tdispatchData(dataTypes.ORDONNANCE_EMISE, ordonnance)\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Grid, Label, Divider, Message } from 'semantic-ui-react'\r\nimport Medicament from './MedicamentForm'\r\nimport { BoutonAjouter, BoutonSupprimer, BoutonAnnuler, BoutonValider } from '../globals/util-components/Boutons'\r\nimport { verifierOrdonnanceType } from './services/GestionNomenclatureService'\r\nimport { validerOrdonnanceType, ajouterOrdonnanceType } from './services/GestionNomenclatureActions'\r\n\r\n\r\nexport default function OrdonnanceType({ description, medicaments, mode, ...otherProps }) {\r\n\r\n\tmedicaments = Array.isArray(medicaments) ? medicaments : []\r\n\r\n\tconst [ordonnanceType, setOrdonnanceType] = useState({ description, medicaments })\r\n\r\n\tfunction supprimerMedicament(index) {\r\n\t\tsetOrdonnanceType(\r\n\t\t\tordonnanceType => {\r\n\t\t\t\tmedicaments = [...ordonnanceType.medicaments]\r\n\t\t\t\tmedicaments.splice(index, 1)\r\n\t\t\t\tconst wOrdonnance = {...ordonnanceType, medicaments}\r\n\t\t\t\twOrdonnance.isOrdonnanceValide = verifierOrdonnanceType(wOrdonnance)\r\n\t\t\t\treturn wOrdonnance\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tfunction ajouterMedicament() {\r\n\t\tsetOrdonnanceType(\r\n\t\t\tordonnanceType => {\r\n\t\t\t\tmedicaments = [...ordonnanceType.medicaments, {}]\r\n\t\t\t\tconst wOrdonnance = {...ordonnanceType, medicaments}\r\n\t\t\t\twOrdonnance.isOrdonnanceValide = verifierOrdonnanceType(wOrdonnance)\r\n\t\t\t\treturn wOrdonnance\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tfunction majMedicament(index) {\r\n\t\treturn function (medicament) {\r\n\t\t\tsetOrdonnanceType(\r\n\t\t\t\tordonnanceType => {\r\n\t\t\t\t\tmedicaments = [...ordonnanceType.medicaments]\r\n\t\t\t\t\tmedicaments.splice(index, 1, medicament)\r\n\t\t\t\t\tconst wOrdonnance = {...ordonnanceType, medicaments}\r\n\t\t\t\t\twOrdonnance.isOrdonnanceValide = verifierOrdonnanceType(wOrdonnance)\r\n\t\t\t\t\treturn wOrdonnance\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction valider() {\t\t\r\n\t\tvaliderOrdonnanceType(ordonnanceType, otherProps)\r\n\t\tajouterOrdonnanceType(ordonnanceType)\r\n\t}\r\n\r\n\t// fonctions de rendu\r\n\tconst Entete = () => \r\n\t\t<Grid.Row verticalAlign='middle'>\r\n\t\t\t<Grid.Column width={10} textAlign='center'>\r\n\t\t\t\t<h4>{mode} Ordonnance type</h4>\r\n\t\t\t\t{description &&\r\n\t\t\t\t\t<Label color='blue' size='large' basic>{description}</Label>\r\n\t\t\t\t}\r\n\t\t\t\t<Message info>\r\n\t\t\t\t<strong>\t{\r\n\t\t\t\t\tordonnanceType.description ? \r\n\t\t\t\t\t\t<span>{ordonnanceType.description}</span>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\"Veuillez ajouter ci-dessous au moins un médicament pour valider l'ordonnance\"\r\n\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t</strong>\r\n\t\t\t\t</Message>\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid.Row>\r\n\r\n\tconst LignesMedicaments = () => {\r\n\t\tif (Array.isArray(ordonnanceType.medicaments) && ordonnanceType.medicaments.length >= 1) {\r\n\t\t\treturn ordonnanceType.medicaments.map(\r\n\t\t\t\t(medicament, index) =>\r\n\t\t\t\t\t<Grid.Row key={index}>\r\n\t\t\t\t\t\t<Grid.Column textAlign='center' width='1' style={{ padding: 0 }}>\r\n\t\t\t\t\t\t\t<BoutonSupprimer\r\n\t\t\t\t\t\t\t\ttitle='Supprimer ce médicament'\r\n\t\t\t\t\t\t\t\thandleClick={() => supprimerMedicament(index)} />\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column width='15'>\r\n\t\t\t\t\t\t\t<Medicament {...medicament}\r\n\t\t\t\t\t\t\t\tnumMedicament={index}\r\n\t\t\t\t\t\t\t\tmajMedicament={majMedicament(index)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid.Row>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tajouterMedicament()\r\n\t\t\treturn ''\r\n\t\t}\r\n\t}\r\n\r\n\tconst BoutonsActions = () => \r\n\t\t<Grid.Row verticalAlign='middle'>\r\n\t\t\t<Grid.Column width={5} textAlign='left'>\r\n\t\t\t\t{ordonnanceType.isOrdonnanceValide &&\r\n\t\t\t\t\t<BoutonAjouter size='tiny' long title='Ajouter un médicament'\r\n\t\t\t\t\t\thandleClick={() => ajouterMedicament()} />\r\n\t\t\t\t}\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width={11} textAlign='right'>\r\n\t\t\t\t{ordonnanceType.isOrdonnanceValide &&\r\n\t\t\t\t\t<BoutonValider size='tiny' primary long handleClick={valider} />\r\n\t\t\t\t}\r\n\t\t\t\t<BoutonAnnuler size='tiny' long handleClick={(e) => { e.preventDefault() }} />\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid.Row>\r\n\r\n\r\n\t// rendu final\r\n\treturn (\r\n\t\t<Grid >\r\n\t\t\t<Entete />\r\n\t\t\t<LignesMedicaments />\r\n\t\t\t<BoutonsActions />\r\n\t\t</Grid>\r\n\t)\r\n}","import React, { createContext } from 'react';\r\nimport { Form } from 'semantic-ui-react';\r\n\r\nimport FormHandler from '../globals/hoc/FormHandler';\r\nimport { formNames } from '../globals/redux/FormActions'\r\nimport OrdonnanceTypeForm from './OrdonnanceTypeForm';\r\n\r\n\r\n// Config générale pour ! TESTS ! //\r\nconst listeProduits = [\r\n\t{ id: 1, designation: \"Paracétamol\" },\r\n\t{ id: 2, designation: 'Tramadol' },\r\n\t{ id: 3, designation: 'Codéine' },\r\n\t{ id: 4, designation: 'Poudre d\\'opium' }\r\n]\r\nconst listeUnitesDosage = ['g', 'mg', 'mg LI', 'mg LP', 'µg/h']\r\nconst formesMedicamenteuses = ['Comprimé', 'Gélule', 'Suppositoire', 'Goutte', 'Flasque']\r\n\r\n// Contexte portant la config générale de la fonctionnalité\r\nexport const NomenclatureContext = createContext({ listeProduits, listeUnitesDosage, formesMedicamenteuses })\r\n\r\n// Composant chargé du rendu \r\nexport default function GestionNomenclature(props) {\r\n\r\n\tconst Formulaire = props =>\r\n\t\t<Form size='tiny' style={{ marginBottom: '1rem' }}>\r\n\t\t\t<OrdonnanceTypeForm {...props} />\r\n\t\t</Form>\r\n\r\n\treturn (\r\n\t\t<FormHandler component={Formulaire}\r\n\t\t\tformName={formNames.CONFIG_ORDONNANCE_FORM}\r\n\t\t\tmode='Saisie'\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Grid, GridRow, GridColumn, Message } from 'semantic-ui-react'\r\nimport { BoutonAjouter } from '../globals/util-components/Boutons'\r\n\r\n\r\nexport default function ListeOrdonnancesTypes({ ordonnancesTypes, creerOrdonnance, ...otherPrpos }) {\r\n\r\n\tconst listeOrdonnancesTypes = Array.isArray(ordonnancesTypes) ? ordonnancesTypes : [{}]\r\n\r\n\t// fonction de gestion d'état\r\n\tfunction nouvelleOrdonnance() {\r\n\t\tif (creerOrdonnance) {\r\n\t\t\tcreerOrdonnance()\r\n\t\t}\r\n\t}\r\n\r\n\t// fonctions de rendu\r\n\tconst Entete = () =>\r\n\t\t<Grid.Row verticalAlign='middle'>\r\n\t\t\t<Grid.Column width={10} textAlign='center'>\r\n\t\t\t\t<h4>Liste des ordonnances types</h4>\r\n\t\t\t\t<Message info>\r\n\t\t\t\t\t<strong>\r\n\t\t\t\t\t\tVeuillez sélectionner une ordonnance type ci-dessous ou en créer une nouvelle\r\n\t\t\t\t</strong>\r\n\t\t\t\t</Message>\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid.Row>\r\n\r\n\tconst LignesOrdonnances = () => {\r\n\t\treturn listeOrdonnancesTypes.map(\r\n\t\t\t(ordonnanceType, index) =>\r\n\t\t\t\t<GridRow key={index}>\r\n\t\t\t\t\t<GridColumn>\r\n\t\t\t\t\t\t{ordonnanceType.description}\r\n\t\t\t\t\t</GridColumn>\r\n\t\t\t\t</GridRow>\r\n\t\t)\r\n\t}\r\n\r\n\tconst BoutonsActions = () =>\r\n\t\t<Grid.Row verticalAlign='middle'>\r\n\t\t\t<Grid.Column width={5} textAlign='left'>\r\n\t\t\t\t<BoutonAjouter size='tiny' long title='Nouvelle ordonnance type'\r\n\t\t\t\t\thandleClick={nouvelleOrdonnance} />\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid.Row>\r\n\r\n\r\n\t// rendu\r\n\treturn (\r\n\t\t<Grid padded>\r\n\t\t\t<Entete></Entete>\r\n\t\t\t<LignesOrdonnances></LignesOrdonnances>\r\n\t\t\t<BoutonsActions></BoutonsActions>\r\n\t\t</Grid>\r\n\t)\r\n}","import React from 'react'\r\nimport ListeOrdonnancesTypes from './ListeOrdonnancesTypes'\r\nimport { dataTypes } from './services/GestionNomenclatureActions'\r\nimport { connect } from 'react-redux'\r\nimport { routesConfig, goToRoute } from '../globals/services/routeService'\r\n\r\nconst mapStateToProps = state => {\r\n\tlet props = state.nomenclature ? \r\n\t\t{ \r\n\t\t\tordonnancesTypes: state.nomenclature[dataTypes.LISTE_ORDONNANCES_TYPES]\r\n\t\t}\r\n\t\t: {}\r\n\treturn props\r\n}\r\n\r\n\r\n\r\nfunction OrdonnancesTypesController({ ordonnancesTypes, ...otherProps }) {\r\n\r\n\tfunction creerOrdonnance() {\r\n\t\tlet {history} = otherProps\r\n\t\tgoToRoute(history)(routesConfig.GESTION_NOMENCLATURE)\r\n\t}\r\n\r\n\tconst props = { ordonnancesTypes, creerOrdonnance, ...otherProps }\r\n\r\n\t// rendu\r\n\treturn (\r\n\t\t<ListeOrdonnancesTypes {...props} />\r\n\t)\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrdonnancesTypesController)\r\n\r\n","import React from 'react'\r\nimport { Message, Header, List, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getRoutePath, routesConfig } from '../globals/services/routeService'\r\n\r\nconst LoginComponent = (props) => {\r\n\r\n\tconst { message, listeIdProviders } = { ...props }\r\n\r\n\tconst identifiants = listeIdProviders ? Object.keys(listeIdProviders) : null\r\n\tconst pathToIdp = (idp) => getRoutePath(routesConfig.LOGIN_IDP, {idProvider: idp})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{message && <Message error>{message}</Message>}\r\n\r\n\t\t\t<Header as='h4' dividing>Pour vous connecter, sélectionnez le fournisseur d'identité correspondant à votre compte</Header>\r\n\r\n\t\t\t{\r\n\t\t\t\tArray.isArray(identifiants) &&\r\n\t\t\t\t<List divided relaxed>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tidentifiants.map(id => (\r\n\t\t\t\t\t\t\t<List.Item key={id}>\r\n\t\t\t\t\t\t\t\t<Link to={pathToIdp(id)}>\r\n\t\t\t\t\t\t\t\t\t<Image src={listeIdProviders[id]['iconUrl']} size='mini' spaced='right'></Image>\r\n\t\t\t\t\t\t\t\t\t<List.Content>\r\n\t\t\t\t\t\t\t\t\t\t<List.Header as='h5'>{id}</List.Header>\r\n\t\t\t\t\t\t\t\t\t\t<List.Description>{listeIdProviders[id]['description']}</List.Description>\r\n\t\t\t\t\t\t\t\t\t</List.Content>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</List>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default LoginComponent","import React from 'react'\r\nimport { getRouteParams } from '../globals/services/routeService'\r\nimport { backendLogin, loadIdProvidersList, dataTypes } from './services/AuthService'\r\nimport { connect } from 'react-redux'\r\nimport LoginComponent from './LoginComponent'\r\n\r\nconst LoginController = (props) => {\r\n\r\n\tconst idp = getRouteParams(props).idProvider\r\n\tconst { message, listeIdProviders } = { ...props }\r\n\r\n\tif (idp) {\r\n\t\tbackendLogin(idp)\r\n\t\treturn null\r\n\t} else {\r\n\t\tif (!listeIdProviders){\r\n\t\t\tloadIdProvidersList()\r\n\t\t}\r\n\t\treturn <LoginComponent message={message} listeIdProviders={listeIdProviders} />\r\n\t}\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\tconst props = {\r\n\t\tmessage: state.auth[dataTypes.ERROR_MESSAGE],\r\n\t\tlisteIdProviders: state.auth[dataTypes.IDP_LIST],\r\n\t}\r\n\treturn props\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginController)\r\n\r\n","import React from 'react'\r\nimport { validateToken, dataTypes, getTokenFromUrl, logout } from './services/AuthService'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { routesConfig, getRoutePath } from '../globals/services/routeService'\r\nimport { Button, Icon, Dropdown } from 'semantic-ui-react'\r\n\r\nconst UserInfos = (props) => {\r\n\r\n\tlet { userInfos, history } = { ...props }\r\n\r\n\tconst SigninButton = () => (\r\n\t\t<div style={{ position: 'absolute', top: '0.8rem', right: '0.8rem', zIndex: '20' }}>\r\n\t\t\t<Link to={getRoutePath(routesConfig.LOGIN_FORM)}>\r\n\t\t\t\t<Button primary size='small'>\r\n\t\t\t\t\t<Icon name='power'></Icon>\r\n\t\t\t\t\tConnexion\r\n\t\t\t\t</Button>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t)\r\n\r\n\tconst UserResume = (userInfos) => {\r\n\t\tlet name = userInfos.fullName ? userInfos.fullName : \r\n\t\t\tuserInfos.preferredUsername ? userInfos.preferredUsername : userInfos.email\t\t\r\n\t\treturn (\r\n\t\t<div style={{ position: 'absolute', top: '0.8rem', right: '0.8rem', zIndex: '20', fontSize: '1rem' }}>\r\n\t\t\t<Dropdown text={name} >\r\n\t\t\t\t<Dropdown.Menu direction='left'>\r\n\t\t\t\t\t{ userInfos.preferredUsername && \r\n\t\t\t\t\t\t<Dropdown.Item>{userInfos.preferredUsername}</Dropdown.Item>\r\n\t\t\t\t\t}{ userInfos.email && \r\n\t\t\t\t\t\t<Dropdown.Item>{userInfos.email}</Dropdown.Item>\r\n\t\t\t\t\t}{ userInfos.roles && \r\n\t\t\t\t\t\t<Dropdown.Item>Rôles : {userInfos.roles.join(', ')}</Dropdown.Item>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Dropdown.Divider></Dropdown.Divider>\r\n\t\t\t\t\t<Dropdown.Item onClick={logout}>\r\n\t\t\t\t\t\t<Icon name='power' color='red'/>Déconnexion\r\n\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t</Dropdown.Menu>\r\n\t\t\t</Dropdown>\r\n\t\t</div>\r\n\t)}\r\n\r\n\r\n\tif (!userInfos) {\r\n\t\tconst idToken = getTokenFromUrl()\r\n\t\tif (idToken && history) {\r\n\t\t\tvalidateToken(idToken, history)\r\n\t\t}\r\n\t\treturn <SigninButton></SigninButton>\r\n\r\n\t} else {\r\n\t\treturn <UserResume {...userInfos} />\r\n\t}\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\tconst props = {\r\n\t\tuserInfos: state.auth[dataTypes.USER_INFOS],\r\n\t\thistory: state.router.history,\r\n\t}\r\n\treturn props\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserInfos)","import { generatePath } from \"react-router\";\r\n\r\nimport Arborescence from \"../../ordonnance/ArborescenceController\"\r\nimport FicheDouleur from \"../../ordonnance/FicheDouleurController\"\r\nimport Prescription from \"../../ordonnance/PrescriptionController\"\r\nimport Ordonnance from \"../../ordonnance/OrdonnanceController\"\r\nimport OrdonnanceConfirm from \"../../ordonnance/OrdonnanceConfirm\"\r\nimport GestionNomenclature from \"../../nomenclature/GestionNomenclatureController\"\r\nimport OrdonnancesTypes from \"../../nomenclature/OrdonnancesTypesController\"\r\nimport LoginController from \"../../auth/LoginController\"\r\nimport UserInfos from \"../../auth/UserInfos\"\r\nimport Test from \"../../Test\"\r\n\r\nexport const basePath = '/clientApp'\r\n\r\nexport const routesConfig = {\r\n\tTEST: {\r\n\t\tkey: 'test', path: getPath('/test'), component: Test\t},\r\n\tARBORESCENCE: {\r\n\t\tkey: 'arborescence', path: getPath('/douleurs'), component: Arborescence\t},\r\n\tFICHE_DOULEUR: {\r\n\t\tkey: 'ficheDouleur', path: getPath('/douleurs/:idDouleur'), component: FicheDouleur\t},\r\n\tFORMULAIRE_PRESCRIPTION: {\r\n\t\tkey: 'formulairePrescription', path: getPath('/prescriptionForm'), component: Prescription\t},\r\n\tFORMULAIRE_ORDONNANCE: {\r\n\t\tkey: 'formulaireOrdonnance', path: getPath('/ordonnanceForm'), component: Ordonnance\t},\r\n\tCONFIRMATION_ORDONNANCE: {\r\n\t\tkey: 'confirmationOrdonnance', path: getPath('/ordonnanceConfirm'), component: OrdonnanceConfirm },\r\n\tGESTION_NOMENCLATURE: {\r\n\t\tkey: 'gestionNomenclature', path: getPath('/gestionNomenclature'), component: GestionNomenclature },\r\n\tORDONNANCES_TYPES: {\r\n\t\tkey: 'ordonnancesTypes', path: getPath('/ordonnancesTypes'), component: OrdonnancesTypes },\t\r\n\tLOGIN_FORM: {\r\n\t\tkey: 'loginForm', path: getPath('/login'), component: LoginController },\r\n\tLOGIN_IDP: {\r\n\t\tkey: 'loginIdp', path: getPath('/login/:idProvider'), component: LoginController },\r\n\tVALIDATE_TOKEN: {\r\n\t\tkey: 'validateToken', path: getPath('/token/validate'), component: UserInfos },\r\n}\r\n\r\n\r\nexport function getPath(path) {\r\n\treturn basePath + path\r\n}\r\n\r\nexport const getRoutePath = (route, pathParams) => {\r\n\tconst path = route && route.path ? route.path : route\r\n\treturn generatePath(path, pathParams)\r\n}\r\n\r\nexport const goToRoute = props => {\r\n\tlet { history } = props\r\n\tif (!history) {\r\n\t\thistory = props\r\n\t}\r\n\treturn (route, pathParams) => history.push(getRoutePath(route, pathParams))\r\n}\r\n\r\nexport const getRouteParams = props => {\r\n\tif (props && props.match) {\r\n\t\t return props.match.params\r\n\t}\r\n\treturn {}\r\n}","import { apiURLs, getResultFromUrl } from \"../../globals/services/apiService\"\r\nimport { goToRoute } from \"../../globals/services/routeService\"\r\nimport dispatchData, { resetState } from \"../../globals/redux/store\";\r\n\r\nexport const namespace = 'auth'\r\nexport const dataTypes = {\r\n\tUSER_INFOS: 'userInfos',\r\n\tID_TOKEN: 'idToken',\r\n\tERROR_MESSAGE: 'errorMessage',\r\n\tIDP_LIST: 'idProvidersList',\r\n\tID_PROVIDER: 'idProvider'\r\n}\r\n\r\nexport const loadIdProvidersList = async (history) => {\r\n\tconst idpList = await getResultFromUrl(apiURLs.idProvidersList)\r\n\tif (idpList && idpList.data) {\r\n\t\tdispatchData(dataTypes.IDP_LIST, idpList.data)\r\n\t}\r\n}\r\n\r\nexport const backendLogin = (idp) => {\t\r\n\tlet redirectUrl = window.location.origin\r\n\tlet loginUrl = apiURLs.login(idp) + \"?redirect_to=\" + redirectUrl\r\n\twindow.location = loginUrl\r\n}\r\n\r\nexport const getTokenFromUrl = () => {\r\n\tconst urlParams = new URLSearchParams(window.location.search)\r\n\tconst idToken = urlParams.get('id_token')\r\n\treturn idToken\r\n}\r\n\r\nexport const validateToken = async (idToken, history) => {\r\n\tconst userResult = await getResultFromUrl(apiURLs.validateToken, { params: { id_token: idToken } })\r\n\tif (userResult && userResult.data) {\r\n\t\tif (userResult.data.user) {\r\n\t\t\tdispatchData(dataTypes.USER_INFOS, userResult.data.user)\r\n\t\t\tdispatchData(dataTypes.ID_TOKEN, userResult.data.id_token)\r\n\t\t\tdispatchData(dataTypes.ID_PROVIDER, userResult.data.user.idpRegistration.registrationId)\r\n\t\t} else {\r\n\t\t\tdispatchData(dataTypes.USER_INFOS, {error: userResult.data.error})\r\n\t\t\tdispatchData(dataTypes.ID_TOKEN, null)\r\n\t\t}\r\n\t}\r\n\tgoToRoute(history)('/')\r\n}\r\n\r\nexport const logout = () => resetState(namespace)\r\n","import { createStore } from \"redux\";\r\nimport { reducers } from \"./reducers\";\r\n\r\n\r\n// les reducers sont chargés de la mise à jour du store lorsque celui ci reçoit une action\r\nexport const store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport function getState(namespace) {\r\n\tconst state = store.getState()[namespace]\r\n    return state\r\n}\r\n\r\nexport function resetState(namespace) {\r\n\tdispatchData(namespace + '.reset', {})\r\n}\r\n\r\nexport default function dispatchData(type, content) {\r\n    store.dispatch({ type, content })\r\n}\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport dispatchData, { store, getState } from \"../redux/store\";\r\nimport { dataTypes as authDataTypes } from \"../../auth/services/AuthService\";\r\nimport { routesConfig, goToRoute } from \"./routeService\";\r\n\r\n\r\nexport const backendURL = process.env.REACT_APP_BACKEND_URL ? process.env.REACT_APP_BACKEND_URL : ''\r\n\r\nexport const apiURLs = {\r\n\tarborescenceDouleurs: backendURL + '/douleurs/arborescence',\r\n\tficheDouleur: idDouleur => backendURL + '/douleurs/' + idDouleur,\r\n\tnouvelleOrdonnance: backendURL + '/ordonnances/nouvelle',\r\n\tordonnanceEmise: idOrdonnance => backendURL + '/ordonnances/emises/' + idOrdonnance,\r\n\tidProvidersList: backendURL + '/users/login/infos',\r\n\tlogin: idProvider => backendURL + '/users/login/' + idProvider,\t\r\n\tvalidateToken: backendURL + '/users/login/registerToken',\r\n}\r\n\r\nconst textMimeTypes = [\r\n\t\"application/javascript\", \"application/json\", \"application/xml\",\r\n\t'application/xhtml+xml', 'application/typescript', 'application/x-sh',\r\n]\r\n\r\nexport const returnTypes = {\r\n\tOBJECT: 'object',\r\n\tTEXT: 'text',\r\n\tBLOB: 'blob',\r\n}\r\n\r\nconst messagesFromStatus = {\r\n\t401: \"Votre session a expiré ou l'authentification a échoué, veuillez vous reconnecter\",\r\n\t403: \"Vous n'êtes pas autorisé à accéder à cette ressource, veuillez vous identifier\"\r\n}\r\n\r\nexport const getResultFromUrl = async (url, config) => {\r\n\tlet result = {}\r\n\tconfig = secureUrlConfig(config)\r\n\ttry {\r\n\t\tawait axios.get(url, config).then(response => {\r\n\t\t\tresult = getResultFromResponse(response)\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tresult = getResultFromError(error)\r\n\t\thandleError(result)\r\n\t}\r\n\treturn result\r\n}\r\n\r\nexport const postObjectToUrl = async (object, url, config) => {\r\n\tlet result = {}\r\n\tconfig = secureUrlConfig(config)\r\n\ttry {\r\n\t\tawait axios.post(url, object, config).then(response => {\r\n\t\t\tresult = getResultFromResponse(response)\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tresult = getResultFromError(error)\r\n\t\thandleError(result)\r\n\t}\r\n\treturn result\r\n}\r\n\r\nconst secureUrlConfig = config => {\r\n\tconst idToken = getIdToken()\r\n\tif (idToken) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {}\r\n\t\t}\r\n\t\tconfig.headers = { ...config.headers, ...{ Authorization: 'Bearer ' + idToken } }\r\n\t}\r\n\treturn config\r\n}\r\n\r\nconst getIdToken = () => {\r\n\tif (getState('auth')) {\r\n\t\tconst state = getState('auth')\r\n\t\tconst idToken = state[authDataTypes.ID_TOKEN]\r\n\t\treturn idToken\r\n\t}\r\n\treturn null\r\n}\r\n\r\nconst getResultFromError = error => {\r\n\tconsole.log(\"error: \" + JSON.stringify(error))\r\n\tlet data = { error: error.message }\r\n\tif (error.response && error.response.data) {\r\n\t\tdata = error.response.data\r\n\t\tlet message = messagesFromStatus[data.status]\r\n\t\tif (message) {\r\n\t\t\tdata.message = message\r\n\t\t}\r\n\t}\r\n\tconst result = {\r\n\t\tdata,\r\n\t\ttype: returnTypes.OBJECT,\r\n\t\tcontentType: 'application/json'\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nconst handleError = error => {\r\n\tif ([401, 403].indexOf(error.data.status) > -1) {\r\n\t\tif (store.getState().router) {\r\n\t\t\tconst history = store.getState().router.history\r\n\t\t\tif (history) {\r\n\t\t\t\tif (store.getState().auth && store.getState().auth.idProvider) {\r\n\t\t\t\t\tconst idProvider = store.getState().auth.idProvider\r\n\t\t\t\t\tgoToRoute(history)(routesConfig.LOGIN_IDP, {idProvider})\r\n\t\t\t\t}\r\n\t\t\t\tgoToRoute(history)(routesConfig.LOGIN_FORM)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdispatchData(authDataTypes.ERROR_MESSAGE, error.data.message)\r\n\t}\r\n}\r\n\r\nconst getResultFromResponse = async response => {\r\n\tlet result = response\r\n\tif (result.data) {\r\n\t\tconst contentType = result.data.type ? result.data.type : result.headers[\"content-type\"]\r\n\t\tresult.contentType = contentType\r\n\t\tresult.type = returnTypes.OBJECT\r\n\t\tif (contentType && (contentType.toLowerCase().startsWith('text')\r\n\t\t\t|| textMimeTypes.find(type => contentType.toLowerCase().startsWith(type)))) {\r\n\t\t\tif (result.data.text) {\r\n\t\t\t\tlet textResult\r\n\t\t\t\tawait result.data.text().then(text => textResult = text)\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst obj = JSON.parse(textResult)\r\n\t\t\t\t\tresult.data = obj\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log(\"error: \" + error)\r\n\t\t\t\t\tresult.data = textResult\r\n\t\t\t\t\tresult.type = returnTypes.TEXT\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult.type = returnTypes.BLOB\r\n\t\t}\r\n\t}\r\n\treturn result\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { backendURL } from './globals/services/apiService';\r\n\r\nexport const dataTypes = {\r\n\tREDIRECT_TEST: 'redirectTest',\r\n}\r\n\r\nconst serverRedirect = async (history) => {\r\n\twindow.location = backendURL + \"/tests/redirect\"\r\n}\r\n\r\nfunction Test (props) {\r\n\r\n\tconst { history } = { ...props }\r\n\r\n\tconst urlParams = new URLSearchParams(window.location.search)\r\n\tconst redirectInfo = urlParams.get('redirectInfo')\r\n\tif (redirectInfo) {\r\n\t\treturn <> {redirectInfo} </>\r\n\t} else {\r\n\t\tserverRedirect(history)\r\n\t\treturn null\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\tif (state.test) {\r\n\t\treturn {\r\n\t\t\tredirectInfo : state.test[dataTypes.REDIRECT_TEST]\r\n\t\t}\r\n\t} else {\r\n\t\treturn {}\r\n\t}\r\n}\r\nexport default connect(mapStateToProps)(Test)\r\n\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////\r\n\r\n/**\r\n *    ====>    Autocomplétion avec material-ui\r\n */\r\n\r\n// function Test(props) {\r\n\r\n//     const defaultProps = {\r\n//         options: top100Films,\r\n//         getOptionLabel: option => option.title,\r\n//     };\r\n\r\n//     const [value, setValue] = React.useState([]);\r\n\r\n//     return (\r\n//         <div >\r\n\r\n//             <p>Choix : {\r\n//                 (Array.isArray(value) && value.map(item => <p>{item.id}</p>)) ||\r\n//                 (value && value.id ? value.id : (value ? value : ''))\r\n//             } </p>\r\n\r\n//             <Grid container spacing={2}>\r\n//                 <Grid item xs={3}>\r\n//                     <Autocomplete\r\n//                         {...defaultProps}\r\n//                         id=\"include-input-in-list\"\r\n//                         freeSolo\r\n//                         renderInput={params => (\r\n//                             <TextField {...params} label=\"includeInputInList\" fullWidth />\r\n//                         )}\r\n//                     />\r\n//                 </Grid>\r\n//                 <Grid item xs={3}>\r\n//                     <Autocomplete\r\n//                         id=\"controlled-demo\"\r\n//                         options={[{ id: '400 mg' }, { id: '500 mg' },]}\r\n//                         getOptionLabel={option => option.id}\r\n//                         // disableOpenOnFocus\r\n//                         clearOnEscape\r\n//                         freeSolo\r\n//                         // multiple\r\n//                         value={value}\r\n//                         onChange={(event, newValue) => { setValue(newValue); }}\r\n//                         renderInput={params => (\r\n//                             <TextField {...params} label=\"dosage\" fullWidth />\r\n//                         )}\r\n//                     />\r\n//                 </Grid>\r\n\r\n//             </Grid>\r\n\r\n\r\n\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\n// const top100Films = [\r\n//     { title: 'The Shawshank Redemption', year: 1994 },\r\n//     { title: 'The Godfather', year: 1972 },\r\n//     { title: 'The Godfather: Part II', year: 1974 },\r\n//     { title: 'The Dark Knight', year: 2008 },\r\n//     { title: '12 Angry Men', year: 1957 },\r\n//     { title: \"Schindler's List\", year: 1993 },\r\n//     { title: 'Pulp Fiction', year: 1994 },\r\n//     { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n//     { title: 'Life Is Beautiful', year: 1997 },\r\n//     { title: 'The Usual Suspects', year: 1995 },\r\n//     { title: 'Léon: The Professional', year: 1994 },\r\n//     { title: 'Spirited Away', year: 2001 },\r\n//     { title: 'Saving Private Ryan', year: 1998 },\r\n//     { title: 'Once Upon a Time in the West', year: 1968 },\r\n//     { title: 'American History X', year: 1998 },\r\n//     { title: 'Interstellar', year: 2014 },\r\n//     { title: 'Casablanca', year: 1942 },\r\n//     { title: 'City Lights', year: 1931 },\r\n//     { title: 'Psycho', year: 1960 },\r\n//     { title: 'The Green Mile', year: 1999 },\r\n//     { title: 'The Intouchables', year: 2011 },\r\n//     { title: 'Modern Times', year: 1936 },\r\n//     { title: 'Raiders of the Lost Ark', year: 1981 },\r\n//     { title: 'Rear Window', year: 1954 },\r\n//     { title: 'The Pianist', year: 2002 },\r\n//     { title: 'The Departed', year: 2006 },\r\n//     { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n//     { title: 'Back to the Future', year: 1985 },\r\n//     { title: 'Paths of Glory', year: 1957 },\r\n//     { title: 'Django Unchained', year: 2012 },\r\n//     { title: 'The Shining', year: 1980 },\r\n//     { title: 'WALL·E', year: 2008 },\r\n//     { title: 'American Beauty', year: 1999 },\r\n//     { title: 'The Dark Knight Rises', year: 2012 },\r\n//     { title: 'Princess Mononoke', year: 1997 },\r\n//     { title: 'Aliens', year: 1986 },\r\n//     { title: 'Oldboy', year: 2003 },\r\n//     { title: 'Once Upon a Time in America', year: 1984 },\r\n//     { title: 'Witness for the Prosecution', year: 1957 },\r\n//     { title: 'Das Boot', year: 1981 },\r\n//     { title: 'Citizen Kane', year: 1941 },\r\n//     { title: 'North by Northwest', year: 1959 },\r\n//     { title: 'Vertigo', year: 1958 },\r\n//     { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n//     { title: 'Reservoir Dogs', year: 1992 },\r\n//     { title: 'Braveheart', year: 1995 },\r\n//     { title: 'M', year: 1931 },\r\n//     { title: 'Requiem for a Dream', year: 2000 },\r\n// ];\r\n\r\n// export default Test","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport { dataTypes as testDataTypes } from \"../../Test\"\r\nimport { dataTypes as ordonnanceDataTypes  } from \"../../ordonnance/services/OrdonnanceActions\";\r\nimport { dataTypes as nomenclatureDataTypes  } from \"../../nomenclature/services/GestionNomenclatureActions\";\r\nimport { formNames } from \"./FormActions\"\r\nimport { dataTypes as authDataTypes} from \"../../auth/services/AuthService\"\r\n\r\n/**\r\n * Ici on répertorie les types de données à gérer par redux, répartis par fonctionnalité (namespace)\r\n * Ces types de données sont transmis aux actions redux via la méthode dispatch()\r\n */\r\nexport const namespaces = {\r\n\ttest: testDataTypes,\r\n\tnomenclature: nomenclatureDataTypes,\r\n\tordonnance: ordonnanceDataTypes, \r\n\tappForms: formNames,\r\n\tauth: authDataTypes,\r\n\trouter: { history: 'history' }\r\n}\r\n\r\n/**\r\n * Ici on référence les reducers de l'appli Redux pour chaque fonctionnalité.\r\n * Ce sont des fonctions chargées de calculer le nouvel état du store \r\n * à partir de l'état précédent et de l'action effectuée.\r\n */\r\nexport const reducers = combineReducers({\r\n\t...getReducers(),\r\n\tform: formReducer,\r\n})\r\n\r\nfunction getReducers() {\r\n\tlet reducers = {} \r\n\tObject.keys(namespaces).forEach(namespace =>\t{\r\n\t\treducers[namespace] = getReducer(namespace)\r\n\t})\r\n\treturn reducers\r\n}\r\n\r\n/**\r\n * Fournit un reducer générique pour la fonctionnalité concernée (namespace) \r\n */\r\nfunction getReducer(namespace) {\r\n\r\n\tconst reducer =  function(state = {}, action) {\r\n\t\tif (namespaces[namespace][action.type]) {\r\n\t\t\treturn { ...state, [namespaces[namespace][action.type]]: action.content }\r\n\t\t} else if (typeof namespaces[namespace] === 'object') {\r\n\t\t\tif (action.type === namespace + '.reset') {\r\n\t\t\t\treturn {}\r\n\t\t\t}\r\n\t\t\tconst namespaceData = namespaces[namespace]\r\n\t\t\tif ( Object.values(namespaceData).findIndex(value => \r\n\t\t\t\t\t\tvalue === action.type) >= 0 ) {\r\n\t\t\t\treturn { ...state, [action.type]: action.content }\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn state\r\n\t}\r\n\treturn reducer\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { slide as Menu } from 'react-burger-menu'\r\n\r\nimport { getRoutePath, routesConfig } from \"../services/routeService\";\r\nimport './MenuBar.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function MenuBar() {\r\n\r\n\tconst [open, setOpen] = useState(false)\r\n\r\n\treturn (\r\n\t\t<Menu isOpen={open} onStateChange={(state) => setOpen(state.isOpen)}>\r\n\r\n\t\t\t<Link className=\"menu-item accueil\" onClick={() => setOpen(false)}\r\n\t\t\t\tto=\"/\">\r\n\t\t\t\tAccueil\r\n\t\t\t</Link>\r\n\t\t\t<Link className=\"menu-item ordonnance\" onClick={() => setOpen(false)}\r\n\t\t\t\tto={getRoutePath(routesConfig.ARBORESCENCE)}>\r\n\t\t\t\tOrdonnance\r\n\t\t\t</Link>\r\n\t\t\t<Link className=\"menu-item histo\" onClick={() => setOpen(false)}\r\n\t\t\t\tto={getRoutePath(routesConfig.HISTORIQUE)}>\r\n\t\t\t\tHistorique\r\n\t\t\t</Link>\r\n\t\t\t<Link className=\"menu-item lien\" onClick={() => setOpen(false)}\r\n\t\t\t\tto={getRoutePath(routesConfig.LIENS)}>\r\n\t\t\t\tLiens\r\n\t\t\t</Link>\r\n\t\t\t<Link className=\"menu-item\" onClick={() => setOpen(false)}\r\n\t\t\t\tto={getRoutePath(routesConfig.GESTION_NOMENCLATURE)}>\r\n\t\t\t\tConfigurer nomenclature\r\n\t\t\t</Link>\r\n\r\n\t\t</Menu>\r\n\t)\r\n}","import React from 'react'\r\nimport { Message, Segment } from 'semantic-ui-react'\r\nimport { Fragment } from 'react'\r\n\r\n\r\nconst Accueil = function (props) {\r\n\r\n\treturn (\r\n\t\t<Message info>\r\n\t\t\t<div>\r\n\t\t\t\t<h4>Avec Med Pain, contrôlez la douleur de vos patients </h4>\r\n\t\t\t\t<p>Accédez aux protocoles douleur adaptés, avec rapidité et efficacité, où que vous soyez</p>\r\n\t\t\t\t<p>Cliquez sur le menu en haut à gauche et sélectionnez votre choix</p>\r\n\t\t\t</div>\r\n\t\t</Message>\r\n\r\n\t)\r\n\r\n}\r\n\r\n\r\nexport default Accueil\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport dispatchData from '../redux/store'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport default function ReduxHistory(props) {\r\n\r\n\tconst {children, ...rest} = {...props}\r\n\r\n\tconst history = useHistory()\r\n\tdispatchData('history', history)\r\n\r\n\tif (children) {\r\n\t\tconst type = children.type.WrappedComponent\r\n\t\tconst childrenProps = children.props\r\n\t\treturn React.createElement(type,  {history: history, ...childrenProps, ...rest})\r\n\t} else {\r\n\t\treturn null\r\n\t}\r\n\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nimport MainApp from './App'\r\n\r\nReactDOM.render( <MainApp />, document.getElementById('react-app'))\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { Header, Segment, Grid } from 'semantic-ui-react';\r\n\r\nimport { store } from \"./globals/redux/store\";\r\nimport { routesConfig } from \"./globals/services/routeService\";\r\nimport \"./App.css\";\r\n// import \"./assets/bootstrap-slate.css\";\r\nimport Menu from \"./globals/components/MenuBar\";\r\nimport Accueil from \"./globals/components/Accueil\";\r\nimport ReduxHistory from './globals/components/ReduxHistory';\r\nimport UserInfos from './auth/UserInfos';\r\n\r\nexport default function App() {\r\n\r\n\tconst contentHeight = Math.floor(0.75 * window.screen.availHeight) + 'px'\r\n\r\n\treturn (\r\n\t\t// le Provider permet la connexion des composants enfants au store\r\n\t\t<Provider store={store}>\r\n\r\n\t\t\t{/** le Router transmets la prop history à tous les composants enfants */}\r\n\t\t\t<Router>\r\n\r\n\t\t\t\t<ReduxHistory />\t{/** stocke l'objet history dans le store pour le rendre accessible partout */}\r\n\r\n\t\t\t\t<Menu />\r\n\r\n\t\t\t\t<Header as=\"h2\" color=\"grey\" textAlign=\"center\" inverted dividing style={{\r\n\t\t\t\t\tmargin: 0, paddingTop: '1.5rem', paddingBottom: '1.5rem', position: 'fixed', top: 0, left: 0,\r\n\t\t\t\t\tzIndex: 10, background: 'rgb(0, 0, 0)', minWidth: '100%'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<Grid.Column width={5}></Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column width={6}>\r\n\t\t\t\t\t\t\t<span>Med Pain Pro</span>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column width={5} style= {{paddingTop: 0, paddingBottom: 0}}>\r\n\t\t\t\t\t\t\t<UserInfos />\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Header>\r\n\r\n\t\t\t\t<Segment className='center' style={{ top: '6rem', height: contentHeight, overflow: 'auto', paddingBottom: '1rem' }}>\r\n\t\t\t\t\t<Route exact path='/' render={props => <Accueil {...props} />} />\r\n\t\t\t\t\t{Object.keys(routesConfig).map(\r\n\t\t\t\t\t\trouteKey => (<Route exact {...routesConfig[routeKey]} />)\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Segment>\r\n\r\n\t\t\t</Router>\r\n\r\n\t\t</Provider>\r\n\t)\r\n\r\n}"],"sourceRoot":""}